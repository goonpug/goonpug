// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_usermessages.proto

#ifndef PROTOBUF_cstrike15_5fusermessages_2eproto__INCLUDED
#define PROTOBUF_cstrike15_5fusermessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "google/protobuf/descriptor.pb.h"
#include "netmessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

class CCSUsrMsg_VGUIMenu;
class CCSUsrMsg_VGUIMenu_Subkey;
class CCSUsrMsg_Geiger;
class CCSUsrMsg_Train;
class CCSUsrMsg_HudText;
class CCSUsrMsg_SayText;
class CCSUsrMsg_SayText2;
class CCSUsrMsg_TextMsg;
class CCSUsrMsg_HudMsg;
class CCSUsrMsg_Shake;
class CCSUsrMsg_Fade;
class CCSUsrMsg_Rumble;
class CCSUsrMsg_CloseCaption;
class CCSUsrMsg_CloseCaptionDirect;
class CCSUsrMsg_SendAudio;
class CCSUsrMsg_RawAudio;
class CCSUsrMsg_VoiceMask;
class CCSUsrMsg_VoiceMask_PlayerMask;
class CCSUsrMsg_Damage;
class CCSUsrMsg_RadioText;
class CCSUsrMsg_HintText;
class CCSUsrMsg_KeyHintText;
class CCSUsrMsg_ProcessSpottedEntityUpdate;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate;
class CCSUsrMsg_ReloadEffect;
class CCSUsrMsg_AdjustMoney;
class CCSUsrMsg_KillCam;
class CCSUsrMsg_DesiredTimescale;
class CCSUsrMsg_CurrentTimescale;
class CCSUsrMsg_AchievementEvent;
class CCSUsrMsg_MatchEndConditions;
class CCSUsrMsg_PlayerStatsUpdate;
class CCSUsrMsg_PlayerStatsUpdate_Stat;
class CCSUsrMsg_DisplayInventory;
class CCSUsrMsg_XRankGet;
class CCSUsrMsg_XRankUpd;
class CCSUsrMsg_SetPlayerEloDisplayBracket;
class CCSUsrMsg_RequestEloBracketInfo;
class CCSUsrMsg_SetEloBracketInfo;
class CCSUsrMsg_CallVoteFailed;
class CCSUsrMsg_VoteStart;
class CCSUsrMsg_VotePass;
class CCSUsrMsg_VoteFailed;
class CCSUsrMsg_VoteSetup;
class CCSUsrMsg_SendLastKillerDamageToClient;
class CCSUsrMsg_ServerRankUpdate;
class CCSUsrMsg_ServerRankUpdate_RankUpdate;
class CCSUsrMsg_ItemPickup;
class CCSUsrMsg_ShowMenu;
class CCSUsrMsg_BarTime;
class CCSUsrMsg_AmmoDenied;
class CCSUsrMsg_MarkAchievement;
class CCSUsrMsg_MatchStatsUpdate;
class CCSUsrMsg_ItemDrop;
class CCSUsrMsg_ResetHud;
class CCSUsrMsg_GameTitle;
class CCSUsrMsg_RequestState;
class CCSUsrMsg_StopSpectatorMode;
class CCSUsrMsg_DisconnectToLobby;
class CCSUsrMsg_WarmupHasEnded;
class CCSUsrMsg_ClientInfo;
class CCSUsrMsg_ServerRankRevealAll;

enum ECstrike15UserMessages {
  CS_UM_VGUIMenu = 1,
  CS_UM_Geiger = 2,
  CS_UM_Train = 3,
  CS_UM_HudText = 4,
  CS_UM_SayText = 5,
  CS_UM_SayText2 = 6,
  CS_UM_TextMsg = 7,
  CS_UM_HudMsg = 8,
  CS_UM_ResetHud = 9,
  CS_UM_GameTitle = 10,
  CS_UM_Shake = 12,
  CS_UM_Fade = 13,
  CS_UM_Rumble = 14,
  CS_UM_CloseCaption = 15,
  CS_UM_CloseCaptionDirect = 16,
  CS_UM_SendAudio = 17,
  CS_UM_RawAudio = 18,
  CS_UM_VoiceMask = 19,
  CS_UM_RequestState = 20,
  CS_UM_Damage = 21,
  CS_UM_RadioText = 22,
  CS_UM_HintText = 23,
  CS_UM_KeyHintText = 24,
  CS_UM_ProcessSpottedEntityUpdate = 25,
  CS_UM_ReloadEffect = 26,
  CS_UM_AdjustMoney = 27,
  CS_UM_UpdateTeamMoney = 28,
  CS_UM_StopSpectatorMode = 29,
  CS_UM_KillCam = 30,
  CS_UM_DesiredTimescale = 31,
  CS_UM_CurrentTimescale = 32,
  CS_UM_AchievementEvent = 33,
  CS_UM_MatchEndConditions = 34,
  CS_UM_DisconnectToLobby = 35,
  CS_UM_PlayerStatsUpdate = 36,
  CS_UM_DisplayInventory = 37,
  CS_UM_WarmupHasEnded = 38,
  CS_UM_ClientInfo = 39,
  CS_UM_XRankGet = 40,
  CS_UM_XRankUpd = 41,
  CS_UM_SetPlayerEloDisplayBracket = 42,
  CS_UM_RequestEloBracketInfo = 43,
  CS_UM_SetEloBracketInfo = 44,
  CS_UM_CallVoteFailed = 45,
  CS_UM_VoteStart = 46,
  CS_UM_VotePass = 47,
  CS_UM_VoteFailed = 48,
  CS_UM_VoteSetup = 49,
  CS_UM_ServerRankRevealAll = 50,
  CS_UM_SendLastKillerDamageToClient = 51,
  CS_UM_ServerRankUpdate = 52,
  CS_UM_ItemPickup = 53,
  CS_UM_ShowMenu = 54,
  CS_UM_BarTime = 55,
  CS_UM_AmmoDenied = 56,
  CS_UM_MarkAchievement = 57,
  CS_UM_MatchStatsUpdate = 58,
  CS_UM_ItemDrop = 59
};
bool ECstrike15UserMessages_IsValid(int value);
const ECstrike15UserMessages ECstrike15UserMessages_MIN = CS_UM_VGUIMenu;
const ECstrike15UserMessages ECstrike15UserMessages_MAX = CS_UM_ItemDrop;
const int ECstrike15UserMessages_ARRAYSIZE = ECstrike15UserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECstrike15UserMessages_descriptor();
inline const ::std::string& ECstrike15UserMessages_Name(ECstrike15UserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECstrike15UserMessages_descriptor(), value);
}
inline bool ECstrike15UserMessages_Parse(
    const ::std::string& name, ECstrike15UserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECstrike15UserMessages>(
    ECstrike15UserMessages_descriptor(), name, value);
}
// ===================================================================

class CCSUsrMsg_VGUIMenu_Subkey : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VGUIMenu_Subkey();
  virtual ~CCSUsrMsg_VGUIMenu_Subkey();
  
  CCSUsrMsg_VGUIMenu_Subkey(const CCSUsrMsg_VGUIMenu_Subkey& from);
  
  inline CCSUsrMsg_VGUIMenu_Subkey& operator=(const CCSUsrMsg_VGUIMenu_Subkey& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VGUIMenu_Subkey& default_instance();
  
  void Swap(CCSUsrMsg_VGUIMenu_Subkey* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VGUIMenu_Subkey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  void MergeFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string str = 2;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu.Subkey)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* str_;
  static const ::std::string _default_str_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VGUIMenu_Subkey* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VGUIMenu : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VGUIMenu();
  virtual ~CCSUsrMsg_VGUIMenu();
  
  CCSUsrMsg_VGUIMenu(const CCSUsrMsg_VGUIMenu& from);
  
  inline CCSUsrMsg_VGUIMenu& operator=(const CCSUsrMsg_VGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VGUIMenu& default_instance();
  
  void Swap(CCSUsrMsg_VGUIMenu* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VGUIMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VGUIMenu& from);
  void MergeFrom(const CCSUsrMsg_VGUIMenu& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CCSUsrMsg_VGUIMenu_Subkey Subkey;
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional bool show = 2;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 2;
  inline bool show() const;
  inline void set_show(bool value);
  
  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  inline int subkeys_size() const;
  inline void clear_subkeys();
  static const int kSubkeysFieldNumber = 3;
  inline const ::CCSUsrMsg_VGUIMenu_Subkey& subkeys(int index) const;
  inline ::CCSUsrMsg_VGUIMenu_Subkey* mutable_subkeys(int index);
  inline ::CCSUsrMsg_VGUIMenu_Subkey* add_subkeys();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
      subkeys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
      mutable_subkeys();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  bool show_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey > subkeys_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VGUIMenu* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Geiger : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Geiger();
  virtual ~CCSUsrMsg_Geiger();
  
  CCSUsrMsg_Geiger(const CCSUsrMsg_Geiger& from);
  
  inline CCSUsrMsg_Geiger& operator=(const CCSUsrMsg_Geiger& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Geiger& default_instance();
  
  void Swap(CCSUsrMsg_Geiger* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_Geiger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Geiger& from);
  void MergeFrom(const CCSUsrMsg_Geiger& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 range = 1;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 1;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Geiger)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 range_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_Geiger* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Train : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Train();
  virtual ~CCSUsrMsg_Train();
  
  CCSUsrMsg_Train(const CCSUsrMsg_Train& from);
  
  inline CCSUsrMsg_Train& operator=(const CCSUsrMsg_Train& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Train& default_instance();
  
  void Swap(CCSUsrMsg_Train* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_Train* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Train& from);
  void MergeFrom(const CCSUsrMsg_Train& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 train = 1;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 1;
  inline ::google::protobuf::int32 train() const;
  inline void set_train(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Train)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 train_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_Train* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_HudText();
  virtual ~CCSUsrMsg_HudText();
  
  CCSUsrMsg_HudText(const CCSUsrMsg_HudText& from);
  
  inline CCSUsrMsg_HudText& operator=(const CCSUsrMsg_HudText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HudText& default_instance();
  
  void Swap(CCSUsrMsg_HudText* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_HudText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_HudText& from);
  void MergeFrom(const CCSUsrMsg_HudText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudText)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* text_;
  static const ::std::string _default_text_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_HudText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SayText();
  virtual ~CCSUsrMsg_SayText();
  
  CCSUsrMsg_SayText(const CCSUsrMsg_SayText& from);
  
  inline CCSUsrMsg_SayText& operator=(const CCSUsrMsg_SayText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SayText& default_instance();
  
  void Swap(CCSUsrMsg_SayText* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_SayText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SayText& from);
  void MergeFrom(const CCSUsrMsg_SayText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ent_idx = 1;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);
  
  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  
  // optional bool chat = 3;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 3;
  inline bool chat() const;
  inline void set_chat(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ent_idx_;
  ::std::string* text_;
  static const ::std::string _default_text_;
  bool chat_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_SayText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText2 : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SayText2();
  virtual ~CCSUsrMsg_SayText2();
  
  CCSUsrMsg_SayText2(const CCSUsrMsg_SayText2& from);
  
  inline CCSUsrMsg_SayText2& operator=(const CCSUsrMsg_SayText2& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SayText2& default_instance();
  
  void Swap(CCSUsrMsg_SayText2* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_SayText2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SayText2& from);
  void MergeFrom(const CCSUsrMsg_SayText2& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ent_idx = 1;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);
  
  // optional bool chat = 2;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 2;
  inline bool chat() const;
  inline void set_chat(bool value);
  
  // optional string msg_name = 3;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_name();
  
  // repeated string params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText2)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  ::std::string* msg_name_;
  static const ::std::string _default_msg_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_SayText2* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_TextMsg : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_TextMsg();
  virtual ~CCSUsrMsg_TextMsg();
  
  CCSUsrMsg_TextMsg(const CCSUsrMsg_TextMsg& from);
  
  inline CCSUsrMsg_TextMsg& operator=(const CCSUsrMsg_TextMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_TextMsg& default_instance();
  
  void Swap(CCSUsrMsg_TextMsg* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_TextMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_TextMsg& from);
  void MergeFrom(const CCSUsrMsg_TextMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msg_dst = 1;
  inline bool has_msg_dst() const;
  inline void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  inline ::google::protobuf::int32 msg_dst() const;
  inline void set_msg_dst(::google::protobuf::int32 value);
  
  // repeated string params = 3;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_TextMsg)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msg_dst_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_TextMsg* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudMsg : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_HudMsg();
  virtual ~CCSUsrMsg_HudMsg();
  
  CCSUsrMsg_HudMsg(const CCSUsrMsg_HudMsg& from);
  
  inline CCSUsrMsg_HudMsg& operator=(const CCSUsrMsg_HudMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HudMsg& default_instance();
  
  void Swap(CCSUsrMsg_HudMsg* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_HudMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_HudMsg& from);
  void MergeFrom(const CCSUsrMsg_HudMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
  // optional .CMsgVector2D pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::CMsgVector2D& pos() const;
  inline ::CMsgVector2D* mutable_pos();
  
  // optional .CMsgRGBA clr1 = 3;
  inline bool has_clr1() const;
  inline void clear_clr1();
  static const int kClr1FieldNumber = 3;
  inline const ::CMsgRGBA& clr1() const;
  inline ::CMsgRGBA* mutable_clr1();
  
  // optional .CMsgRGBA clr2 = 4;
  inline bool has_clr2() const;
  inline void clear_clr2();
  static const int kClr2FieldNumber = 4;
  inline const ::CMsgRGBA& clr2() const;
  inline ::CMsgRGBA* mutable_clr2();
  
  // optional int32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::int32 effect() const;
  inline void set_effect(::google::protobuf::int32 value);
  
  // optional float fade_in_time = 6;
  inline bool has_fade_in_time() const;
  inline void clear_fade_in_time();
  static const int kFadeInTimeFieldNumber = 6;
  inline float fade_in_time() const;
  inline void set_fade_in_time(float value);
  
  // optional float fade_out_time = 7;
  inline bool has_fade_out_time() const;
  inline void clear_fade_out_time();
  static const int kFadeOutTimeFieldNumber = 7;
  inline float fade_out_time() const;
  inline void set_fade_out_time(float value);
  
  // optional float hold_time = 9;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 9;
  inline float hold_time() const;
  inline void set_hold_time(float value);
  
  // optional float fx_time = 10;
  inline bool has_fx_time() const;
  inline void clear_fx_time();
  static const int kFxTimeFieldNumber = 10;
  inline float fx_time() const;
  inline void set_fx_time(float value);
  
  // optional string text = 11;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 11;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudMsg)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 channel_;
  ::CMsgVector2D* pos_;
  ::CMsgRGBA* clr1_;
  ::CMsgRGBA* clr2_;
  ::google::protobuf::int32 effect_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  ::std::string* text_;
  static const ::std::string _default_text_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_HudMsg* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Shake : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Shake();
  virtual ~CCSUsrMsg_Shake();
  
  CCSUsrMsg_Shake(const CCSUsrMsg_Shake& from);
  
  inline CCSUsrMsg_Shake& operator=(const CCSUsrMsg_Shake& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Shake& default_instance();
  
  void Swap(CCSUsrMsg_Shake* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_Shake* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Shake& from);
  void MergeFrom(const CCSUsrMsg_Shake& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::google::protobuf::int32 command() const;
  inline void set_command(::google::protobuf::int32 value);
  
  // optional float local_amplitude = 2;
  inline bool has_local_amplitude() const;
  inline void clear_local_amplitude();
  static const int kLocalAmplitudeFieldNumber = 2;
  inline float local_amplitude() const;
  inline void set_local_amplitude(float value);
  
  // optional float frequency = 3;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  inline float frequency() const;
  inline void set_frequency(float value);
  
  // optional float duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline float duration() const;
  inline void set_duration(float value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Shake)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 command_;
  float local_amplitude_;
  float frequency_;
  float duration_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_Shake* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Fade : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Fade();
  virtual ~CCSUsrMsg_Fade();
  
  CCSUsrMsg_Fade(const CCSUsrMsg_Fade& from);
  
  inline CCSUsrMsg_Fade& operator=(const CCSUsrMsg_Fade& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Fade& default_instance();
  
  void Swap(CCSUsrMsg_Fade* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_Fade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Fade& from);
  void MergeFrom(const CCSUsrMsg_Fade& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 duration = 1;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 1;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);
  
  // optional int32 hold_time = 2;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 2;
  inline ::google::protobuf::int32 hold_time() const;
  inline void set_hold_time(::google::protobuf::int32 value);
  
  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);
  
  // optional .CMsgRGBA clr = 4;
  inline bool has_clr() const;
  inline void clear_clr();
  static const int kClrFieldNumber = 4;
  inline const ::CMsgRGBA& clr() const;
  inline ::CMsgRGBA* mutable_clr();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Fade)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 hold_time_;
  ::google::protobuf::int32 flags_;
  ::CMsgRGBA* clr_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_Fade* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Rumble : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Rumble();
  virtual ~CCSUsrMsg_Rumble();
  
  CCSUsrMsg_Rumble(const CCSUsrMsg_Rumble& from);
  
  inline CCSUsrMsg_Rumble& operator=(const CCSUsrMsg_Rumble& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Rumble& default_instance();
  
  void Swap(CCSUsrMsg_Rumble* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_Rumble* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Rumble& from);
  void MergeFrom(const CCSUsrMsg_Rumble& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline ::google::protobuf::int32 data() const;
  inline void set_data(::google::protobuf::int32 value);
  
  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Rumble)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 data_;
  ::google::protobuf::int32 flags_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_Rumble* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaption : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CloseCaption();
  virtual ~CCSUsrMsg_CloseCaption();
  
  CCSUsrMsg_CloseCaption(const CCSUsrMsg_CloseCaption& from);
  
  inline CCSUsrMsg_CloseCaption& operator=(const CCSUsrMsg_CloseCaption& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CloseCaption& default_instance();
  
  void Swap(CCSUsrMsg_CloseCaption* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_CloseCaption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CloseCaption& from);
  void MergeFrom(const CCSUsrMsg_CloseCaption& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);
  
  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);
  
  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaption)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_CloseCaption* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaptionDirect : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CloseCaptionDirect();
  virtual ~CCSUsrMsg_CloseCaptionDirect();
  
  CCSUsrMsg_CloseCaptionDirect(const CCSUsrMsg_CloseCaptionDirect& from);
  
  inline CCSUsrMsg_CloseCaptionDirect& operator=(const CCSUsrMsg_CloseCaptionDirect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CloseCaptionDirect& default_instance();
  
  void Swap(CCSUsrMsg_CloseCaptionDirect* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_CloseCaptionDirect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  void MergeFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);
  
  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);
  
  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaptionDirect)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_CloseCaptionDirect* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendAudio : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SendAudio();
  virtual ~CCSUsrMsg_SendAudio();
  
  CCSUsrMsg_SendAudio(const CCSUsrMsg_SendAudio& from);
  
  inline CCSUsrMsg_SendAudio& operator=(const CCSUsrMsg_SendAudio& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendAudio& default_instance();
  
  void Swap(CCSUsrMsg_SendAudio* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_SendAudio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SendAudio& from);
  void MergeFrom(const CCSUsrMsg_SendAudio& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string radio_sound = 1;
  inline bool has_radio_sound() const;
  inline void clear_radio_sound();
  static const int kRadioSoundFieldNumber = 1;
  inline const ::std::string& radio_sound() const;
  inline void set_radio_sound(const ::std::string& value);
  inline void set_radio_sound(const char* value);
  inline void set_radio_sound(const char* value, size_t size);
  inline ::std::string* mutable_radio_sound();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendAudio)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* radio_sound_;
  static const ::std::string _default_radio_sound_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_SendAudio* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RawAudio : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RawAudio();
  virtual ~CCSUsrMsg_RawAudio();
  
  CCSUsrMsg_RawAudio(const CCSUsrMsg_RawAudio& from);
  
  inline CCSUsrMsg_RawAudio& operator=(const CCSUsrMsg_RawAudio& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RawAudio& default_instance();
  
  void Swap(CCSUsrMsg_RawAudio* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_RawAudio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RawAudio& from);
  void MergeFrom(const CCSUsrMsg_RawAudio& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pitch = 1;
  inline bool has_pitch() const;
  inline void clear_pitch();
  static const int kPitchFieldNumber = 1;
  inline ::google::protobuf::int32 pitch() const;
  inline void set_pitch(::google::protobuf::int32 value);
  
  // optional int32 entidx = 2;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 2;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);
  
  // optional float duration = 3;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 3;
  inline float duration() const;
  inline void set_duration(float value);
  
  // optional string voice_filename = 4;
  inline bool has_voice_filename() const;
  inline void clear_voice_filename();
  static const int kVoiceFilenameFieldNumber = 4;
  inline const ::std::string& voice_filename() const;
  inline void set_voice_filename(const ::std::string& value);
  inline void set_voice_filename(const char* value);
  inline void set_voice_filename(const char* value, size_t size);
  inline ::std::string* mutable_voice_filename();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RawAudio)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 entidx_;
  float duration_;
  ::std::string* voice_filename_;
  static const ::std::string _default_voice_filename_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_RawAudio* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask_PlayerMask : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoiceMask_PlayerMask();
  virtual ~CCSUsrMsg_VoiceMask_PlayerMask();
  
  CCSUsrMsg_VoiceMask_PlayerMask(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  
  inline CCSUsrMsg_VoiceMask_PlayerMask& operator=(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoiceMask_PlayerMask& default_instance();
  
  void Swap(CCSUsrMsg_VoiceMask_PlayerMask* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VoiceMask_PlayerMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  void MergeFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 game_rules_mask = 1;
  inline bool has_game_rules_mask() const;
  inline void clear_game_rules_mask();
  static const int kGameRulesMaskFieldNumber = 1;
  inline ::google::protobuf::int32 game_rules_mask() const;
  inline void set_game_rules_mask(::google::protobuf::int32 value);
  
  // optional int32 ban_masks = 2;
  inline bool has_ban_masks() const;
  inline void clear_ban_masks();
  static const int kBanMasksFieldNumber = 2;
  inline ::google::protobuf::int32 ban_masks() const;
  inline void set_ban_masks(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask.PlayerMask)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 game_rules_mask_;
  ::google::protobuf::int32 ban_masks_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VoiceMask_PlayerMask* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoiceMask();
  virtual ~CCSUsrMsg_VoiceMask();
  
  CCSUsrMsg_VoiceMask(const CCSUsrMsg_VoiceMask& from);
  
  inline CCSUsrMsg_VoiceMask& operator=(const CCSUsrMsg_VoiceMask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoiceMask& default_instance();
  
  void Swap(CCSUsrMsg_VoiceMask* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VoiceMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoiceMask& from);
  void MergeFrom(const CCSUsrMsg_VoiceMask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CCSUsrMsg_VoiceMask_PlayerMask PlayerMask;
  
  // accessors -------------------------------------------------------
  
  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  inline int player_masks_size() const;
  inline void clear_player_masks();
  static const int kPlayerMasksFieldNumber = 1;
  inline const ::CCSUsrMsg_VoiceMask_PlayerMask& player_masks(int index) const;
  inline ::CCSUsrMsg_VoiceMask_PlayerMask* mutable_player_masks(int index);
  inline ::CCSUsrMsg_VoiceMask_PlayerMask* add_player_masks();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
      player_masks() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
      mutable_player_masks();
  
  // optional bool player_mod_enable = 2;
  inline bool has_player_mod_enable() const;
  inline void clear_player_mod_enable();
  static const int kPlayerModEnableFieldNumber = 2;
  inline bool player_mod_enable() const;
  inline void set_player_mod_enable(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask > player_masks_;
  bool player_mod_enable_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VoiceMask* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Damage : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Damage();
  virtual ~CCSUsrMsg_Damage();
  
  CCSUsrMsg_Damage(const CCSUsrMsg_Damage& from);
  
  inline CCSUsrMsg_Damage& operator=(const CCSUsrMsg_Damage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Damage& default_instance();
  
  void Swap(CCSUsrMsg_Damage* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_Damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Damage& from);
  void MergeFrom(const CCSUsrMsg_Damage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 amount = 1;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 1;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
  // optional .CMsgVector inflictor_world_pos = 2;
  inline bool has_inflictor_world_pos() const;
  inline void clear_inflictor_world_pos();
  static const int kInflictorWorldPosFieldNumber = 2;
  inline const ::CMsgVector& inflictor_world_pos() const;
  inline ::CMsgVector* mutable_inflictor_world_pos();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Damage)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 amount_;
  ::CMsgVector* inflictor_world_pos_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_Damage* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RadioText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RadioText();
  virtual ~CCSUsrMsg_RadioText();
  
  CCSUsrMsg_RadioText(const CCSUsrMsg_RadioText& from);
  
  inline CCSUsrMsg_RadioText& operator=(const CCSUsrMsg_RadioText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RadioText& default_instance();
  
  void Swap(CCSUsrMsg_RadioText* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_RadioText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RadioText& from);
  void MergeFrom(const CCSUsrMsg_RadioText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 msg_dst = 1;
  inline bool has_msg_dst() const;
  inline void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  inline ::google::protobuf::int32 msg_dst() const;
  inline void set_msg_dst(::google::protobuf::int32 value);
  
  // optional int32 client = 2;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 2;
  inline ::google::protobuf::int32 client() const;
  inline void set_client(::google::protobuf::int32 value);
  
  // optional string msg_name = 3;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_name();
  
  // repeated string params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RadioText)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 msg_dst_;
  ::google::protobuf::int32 client_;
  ::std::string* msg_name_;
  static const ::std::string _default_msg_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_RadioText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HintText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_HintText();
  virtual ~CCSUsrMsg_HintText();
  
  CCSUsrMsg_HintText(const CCSUsrMsg_HintText& from);
  
  inline CCSUsrMsg_HintText& operator=(const CCSUsrMsg_HintText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HintText& default_instance();
  
  void Swap(CCSUsrMsg_HintText* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_HintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_HintText& from);
  void MergeFrom(const CCSUsrMsg_HintText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HintText)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* text_;
  static const ::std::string _default_text_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_HintText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KeyHintText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_KeyHintText();
  virtual ~CCSUsrMsg_KeyHintText();
  
  CCSUsrMsg_KeyHintText(const CCSUsrMsg_KeyHintText& from);
  
  inline CCSUsrMsg_KeyHintText& operator=(const CCSUsrMsg_KeyHintText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_KeyHintText& default_instance();
  
  void Swap(CCSUsrMsg_KeyHintText* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_KeyHintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_KeyHintText& from);
  void MergeFrom(const CCSUsrMsg_KeyHintText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string hints = 1;
  inline int hints_size() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 1;
  inline const ::std::string& hints(int index) const;
  inline ::std::string* mutable_hints(int index);
  inline void set_hints(int index, const ::std::string& value);
  inline void set_hints(int index, const char* value);
  inline void set_hints(int index, const char* value, size_t size);
  inline ::std::string* add_hints();
  inline void add_hints(const ::std::string& value);
  inline void add_hints(const char* value);
  inline void add_hints(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& hints() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_hints();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KeyHintText)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> hints_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_KeyHintText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  virtual ~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  
  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& default_instance();
  
  void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 entity_idx = 1;
  inline bool has_entity_idx() const;
  inline void clear_entity_idx();
  static const int kEntityIdxFieldNumber = 1;
  inline ::google::protobuf::int32 entity_idx() const;
  inline void set_entity_idx(::google::protobuf::int32 value);
  
  // optional int32 class_id = 2;
  inline bool has_class_id() const;
  inline void clear_class_id();
  static const int kClassIdFieldNumber = 2;
  inline ::google::protobuf::int32 class_id() const;
  inline void set_class_id(::google::protobuf::int32 value);
  
  // optional int32 origin_x = 3;
  inline bool has_origin_x() const;
  inline void clear_origin_x();
  static const int kOriginXFieldNumber = 3;
  inline ::google::protobuf::int32 origin_x() const;
  inline void set_origin_x(::google::protobuf::int32 value);
  
  // optional int32 origin_y = 4;
  inline bool has_origin_y() const;
  inline void clear_origin_y();
  static const int kOriginYFieldNumber = 4;
  inline ::google::protobuf::int32 origin_y() const;
  inline void set_origin_y(::google::protobuf::int32 value);
  
  // optional int32 origin_z = 5;
  inline bool has_origin_z() const;
  inline void clear_origin_z();
  static const int kOriginZFieldNumber = 5;
  inline ::google::protobuf::int32 origin_z() const;
  inline void set_origin_z(::google::protobuf::int32 value);
  
  // optional int32 angle_y = 6;
  inline bool has_angle_y() const;
  inline void clear_angle_y();
  static const int kAngleYFieldNumber = 6;
  inline ::google::protobuf::int32 angle_y() const;
  inline void set_angle_y(::google::protobuf::int32 value);
  
  // optional bool defuser = 7;
  inline bool has_defuser() const;
  inline void clear_defuser();
  static const int kDefuserFieldNumber = 7;
  inline bool defuser() const;
  inline void set_defuser(bool value);
  
  // optional bool player_has_defuser = 8;
  inline bool has_player_has_defuser() const;
  inline void clear_player_has_defuser();
  static const int kPlayerHasDefuserFieldNumber = 8;
  inline bool player_has_defuser() const;
  inline void set_player_has_defuser(bool value);
  
  // optional bool player_has_c4 = 9;
  inline bool has_player_has_c4() const;
  inline void clear_player_has_c4();
  static const int kPlayerHasC4FieldNumber = 9;
  inline bool player_has_c4() const;
  inline void set_player_has_c4(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 entity_idx_;
  ::google::protobuf::int32 class_id_;
  ::google::protobuf::int32 origin_x_;
  ::google::protobuf::int32 origin_y_;
  ::google::protobuf::int32 origin_z_;
  ::google::protobuf::int32 angle_y_;
  bool defuser_;
  bool player_has_defuser_;
  bool player_has_c4_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ProcessSpottedEntityUpdate();
  virtual ~CCSUsrMsg_ProcessSpottedEntityUpdate();
  
  CCSUsrMsg_ProcessSpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  
  inline CCSUsrMsg_ProcessSpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ProcessSpottedEntityUpdate& default_instance();
  
  void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ProcessSpottedEntityUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate SpottedEntityUpdate;
  
  // accessors -------------------------------------------------------
  
  // optional bool new_update = 1;
  inline bool has_new_update() const;
  inline void clear_new_update();
  static const int kNewUpdateFieldNumber = 1;
  inline bool new_update() const;
  inline void set_new_update(bool value);
  
  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  inline int entity_updates_size() const;
  inline void clear_entity_updates();
  static const int kEntityUpdatesFieldNumber = 2;
  inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& entity_updates(int index) const;
  inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* mutable_entity_updates(int index);
  inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* add_entity_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
      entity_updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
      mutable_entity_updates();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool new_update_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate > entity_updates_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ProcessSpottedEntityUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ReloadEffect : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ReloadEffect();
  virtual ~CCSUsrMsg_ReloadEffect();
  
  CCSUsrMsg_ReloadEffect(const CCSUsrMsg_ReloadEffect& from);
  
  inline CCSUsrMsg_ReloadEffect& operator=(const CCSUsrMsg_ReloadEffect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ReloadEffect& default_instance();
  
  void Swap(CCSUsrMsg_ReloadEffect* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ReloadEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ReloadEffect& from);
  void MergeFrom(const CCSUsrMsg_ReloadEffect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ReloadEffect)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 entidx_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ReloadEffect* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AdjustMoney : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_AdjustMoney();
  virtual ~CCSUsrMsg_AdjustMoney();
  
  CCSUsrMsg_AdjustMoney(const CCSUsrMsg_AdjustMoney& from);
  
  inline CCSUsrMsg_AdjustMoney& operator=(const CCSUsrMsg_AdjustMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AdjustMoney& default_instance();
  
  void Swap(CCSUsrMsg_AdjustMoney* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_AdjustMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_AdjustMoney& from);
  void MergeFrom(const CCSUsrMsg_AdjustMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 amount = 1;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 1;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AdjustMoney)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_AdjustMoney* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KillCam : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_KillCam();
  virtual ~CCSUsrMsg_KillCam();
  
  CCSUsrMsg_KillCam(const CCSUsrMsg_KillCam& from);
  
  inline CCSUsrMsg_KillCam& operator=(const CCSUsrMsg_KillCam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_KillCam& default_instance();
  
  void Swap(CCSUsrMsg_KillCam* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_KillCam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_KillCam& from);
  void MergeFrom(const CCSUsrMsg_KillCam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 obs_mode = 1;
  inline bool has_obs_mode() const;
  inline void clear_obs_mode();
  static const int kObsModeFieldNumber = 1;
  inline ::google::protobuf::int32 obs_mode() const;
  inline void set_obs_mode(::google::protobuf::int32 value);
  
  // optional int32 first_target = 2;
  inline bool has_first_target() const;
  inline void clear_first_target();
  static const int kFirstTargetFieldNumber = 2;
  inline ::google::protobuf::int32 first_target() const;
  inline void set_first_target(::google::protobuf::int32 value);
  
  // optional int32 second_target = 3;
  inline bool has_second_target() const;
  inline void clear_second_target();
  static const int kSecondTargetFieldNumber = 3;
  inline ::google::protobuf::int32 second_target() const;
  inline void set_second_target(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KillCam)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 obs_mode_;
  ::google::protobuf::int32 first_target_;
  ::google::protobuf::int32 second_target_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_KillCam* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DesiredTimescale : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_DesiredTimescale();
  virtual ~CCSUsrMsg_DesiredTimescale();
  
  CCSUsrMsg_DesiredTimescale(const CCSUsrMsg_DesiredTimescale& from);
  
  inline CCSUsrMsg_DesiredTimescale& operator=(const CCSUsrMsg_DesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DesiredTimescale& default_instance();
  
  void Swap(CCSUsrMsg_DesiredTimescale* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_DesiredTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_DesiredTimescale& from);
  void MergeFrom(const CCSUsrMsg_DesiredTimescale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional float desired_timescale = 1;
  inline bool has_desired_timescale() const;
  inline void clear_desired_timescale();
  static const int kDesiredTimescaleFieldNumber = 1;
  inline float desired_timescale() const;
  inline void set_desired_timescale(float value);
  
  // optional float duration_realtime_sec = 2;
  inline bool has_duration_realtime_sec() const;
  inline void clear_duration_realtime_sec();
  static const int kDurationRealtimeSecFieldNumber = 2;
  inline float duration_realtime_sec() const;
  inline void set_duration_realtime_sec(float value);
  
  // optional int32 interpolator_type = 3;
  inline bool has_interpolator_type() const;
  inline void clear_interpolator_type();
  static const int kInterpolatorTypeFieldNumber = 3;
  inline ::google::protobuf::int32 interpolator_type() const;
  inline void set_interpolator_type(::google::protobuf::int32 value);
  
  // optional float start_blend_time = 4;
  inline bool has_start_blend_time() const;
  inline void clear_start_blend_time();
  static const int kStartBlendTimeFieldNumber = 4;
  inline float start_blend_time() const;
  inline void set_start_blend_time(float value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DesiredTimescale)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  float desired_timescale_;
  float duration_realtime_sec_;
  ::google::protobuf::int32 interpolator_type_;
  float start_blend_time_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_DesiredTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CurrentTimescale : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CurrentTimescale();
  virtual ~CCSUsrMsg_CurrentTimescale();
  
  CCSUsrMsg_CurrentTimescale(const CCSUsrMsg_CurrentTimescale& from);
  
  inline CCSUsrMsg_CurrentTimescale& operator=(const CCSUsrMsg_CurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CurrentTimescale& default_instance();
  
  void Swap(CCSUsrMsg_CurrentTimescale* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_CurrentTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CurrentTimescale& from);
  void MergeFrom(const CCSUsrMsg_CurrentTimescale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional float cur_timescale = 1;
  inline bool has_cur_timescale() const;
  inline void clear_cur_timescale();
  static const int kCurTimescaleFieldNumber = 1;
  inline float cur_timescale() const;
  inline void set_cur_timescale(float value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CurrentTimescale)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  float cur_timescale_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_CurrentTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AchievementEvent : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_AchievementEvent();
  virtual ~CCSUsrMsg_AchievementEvent();
  
  CCSUsrMsg_AchievementEvent(const CCSUsrMsg_AchievementEvent& from);
  
  inline CCSUsrMsg_AchievementEvent& operator=(const CCSUsrMsg_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AchievementEvent& default_instance();
  
  void Swap(CCSUsrMsg_AchievementEvent* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_AchievementEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_AchievementEvent& from);
  void MergeFrom(const CCSUsrMsg_AchievementEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 achievement = 1;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  inline ::google::protobuf::int32 achievement() const;
  inline void set_achievement(::google::protobuf::int32 value);
  
  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AchievementEvent)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 achievement_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 user_id_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_AchievementEvent* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchEndConditions : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_MatchEndConditions();
  virtual ~CCSUsrMsg_MatchEndConditions();
  
  CCSUsrMsg_MatchEndConditions(const CCSUsrMsg_MatchEndConditions& from);
  
  inline CCSUsrMsg_MatchEndConditions& operator=(const CCSUsrMsg_MatchEndConditions& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MatchEndConditions& default_instance();
  
  void Swap(CCSUsrMsg_MatchEndConditions* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_MatchEndConditions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_MatchEndConditions& from);
  void MergeFrom(const CCSUsrMsg_MatchEndConditions& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 fraglimit = 1;
  inline bool has_fraglimit() const;
  inline void clear_fraglimit();
  static const int kFraglimitFieldNumber = 1;
  inline ::google::protobuf::int32 fraglimit() const;
  inline void set_fraglimit(::google::protobuf::int32 value);
  
  // optional int32 mp_maxrounds = 2;
  inline bool has_mp_maxrounds() const;
  inline void clear_mp_maxrounds();
  static const int kMpMaxroundsFieldNumber = 2;
  inline ::google::protobuf::int32 mp_maxrounds() const;
  inline void set_mp_maxrounds(::google::protobuf::int32 value);
  
  // optional int32 mp_winlimit = 3;
  inline bool has_mp_winlimit() const;
  inline void clear_mp_winlimit();
  static const int kMpWinlimitFieldNumber = 3;
  inline ::google::protobuf::int32 mp_winlimit() const;
  inline void set_mp_winlimit(::google::protobuf::int32 value);
  
  // optional int32 mp_timelimit = 4;
  inline bool has_mp_timelimit() const;
  inline void clear_mp_timelimit();
  static const int kMpTimelimitFieldNumber = 4;
  inline ::google::protobuf::int32 mp_timelimit() const;
  inline void set_mp_timelimit(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchEndConditions)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 fraglimit_;
  ::google::protobuf::int32 mp_maxrounds_;
  ::google::protobuf::int32 mp_winlimit_;
  ::google::protobuf::int32 mp_timelimit_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_MatchEndConditions* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerStatsUpdate_Stat : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_PlayerStatsUpdate_Stat();
  virtual ~CCSUsrMsg_PlayerStatsUpdate_Stat();
  
  CCSUsrMsg_PlayerStatsUpdate_Stat(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  
  inline CCSUsrMsg_PlayerStatsUpdate_Stat& operator=(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_PlayerStatsUpdate_Stat& default_instance();
  
  void Swap(CCSUsrMsg_PlayerStatsUpdate_Stat* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_PlayerStatsUpdate_Stat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  void MergeFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);
  
  // optional int32 delta = 2;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 2;
  inline ::google::protobuf::int32 delta() const;
  inline void set_delta(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerStatsUpdate.Stat)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 delta_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_PlayerStatsUpdate_Stat* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerStatsUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_PlayerStatsUpdate();
  virtual ~CCSUsrMsg_PlayerStatsUpdate();
  
  CCSUsrMsg_PlayerStatsUpdate(const CCSUsrMsg_PlayerStatsUpdate& from);
  
  inline CCSUsrMsg_PlayerStatsUpdate& operator=(const CCSUsrMsg_PlayerStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_PlayerStatsUpdate& default_instance();
  
  void Swap(CCSUsrMsg_PlayerStatsUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_PlayerStatsUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_PlayerStatsUpdate& from);
  void MergeFrom(const CCSUsrMsg_PlayerStatsUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CCSUsrMsg_PlayerStatsUpdate_Stat Stat;
  
  // accessors -------------------------------------------------------
  
  // optional int32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);
  
  // optional int32 official_server = 2;
  inline bool has_official_server() const;
  inline void clear_official_server();
  static const int kOfficialServerFieldNumber = 2;
  inline ::google::protobuf::int32 official_server() const;
  inline void set_official_server(::google::protobuf::int32 value);
  
  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 4;
  inline const ::CCSUsrMsg_PlayerStatsUpdate_Stat& stats(int index) const;
  inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* mutable_stats(int index);
  inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
      mutable_stats();
  
  // optional int32 user_id = 5;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 crc = 6;
  inline bool has_crc() const;
  inline void clear_crc();
  static const int kCrcFieldNumber = 6;
  inline ::google::protobuf::int32 crc() const;
  inline void set_crc(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerStatsUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 official_server_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat > stats_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 crc_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_PlayerStatsUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisplayInventory : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_DisplayInventory();
  virtual ~CCSUsrMsg_DisplayInventory();
  
  CCSUsrMsg_DisplayInventory(const CCSUsrMsg_DisplayInventory& from);
  
  inline CCSUsrMsg_DisplayInventory& operator=(const CCSUsrMsg_DisplayInventory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DisplayInventory& default_instance();
  
  void Swap(CCSUsrMsg_DisplayInventory* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_DisplayInventory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_DisplayInventory& from);
  void MergeFrom(const CCSUsrMsg_DisplayInventory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline bool display() const;
  inline void set_display(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisplayInventory)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool display_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_DisplayInventory* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XRankGet : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_XRankGet();
  virtual ~CCSUsrMsg_XRankGet();
  
  CCSUsrMsg_XRankGet(const CCSUsrMsg_XRankGet& from);
  
  inline CCSUsrMsg_XRankGet& operator=(const CCSUsrMsg_XRankGet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_XRankGet& default_instance();
  
  void Swap(CCSUsrMsg_XRankGet* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_XRankGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_XRankGet& from);
  void MergeFrom(const CCSUsrMsg_XRankGet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 mode_idx = 1;
  inline bool has_mode_idx() const;
  inline void clear_mode_idx();
  static const int kModeIdxFieldNumber = 1;
  inline ::google::protobuf::int32 mode_idx() const;
  inline void set_mode_idx(::google::protobuf::int32 value);
  
  // optional int32 controller = 2;
  inline bool has_controller() const;
  inline void clear_controller();
  static const int kControllerFieldNumber = 2;
  inline ::google::protobuf::int32 controller() const;
  inline void set_controller(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XRankGet)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 mode_idx_;
  ::google::protobuf::int32 controller_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_XRankGet* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XRankUpd : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_XRankUpd();
  virtual ~CCSUsrMsg_XRankUpd();
  
  CCSUsrMsg_XRankUpd(const CCSUsrMsg_XRankUpd& from);
  
  inline CCSUsrMsg_XRankUpd& operator=(const CCSUsrMsg_XRankUpd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_XRankUpd& default_instance();
  
  void Swap(CCSUsrMsg_XRankUpd* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_XRankUpd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_XRankUpd& from);
  void MergeFrom(const CCSUsrMsg_XRankUpd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 mode_idx = 1;
  inline bool has_mode_idx() const;
  inline void clear_mode_idx();
  static const int kModeIdxFieldNumber = 1;
  inline ::google::protobuf::int32 mode_idx() const;
  inline void set_mode_idx(::google::protobuf::int32 value);
  
  // optional int32 controller = 2;
  inline bool has_controller() const;
  inline void clear_controller();
  static const int kControllerFieldNumber = 2;
  inline ::google::protobuf::int32 controller() const;
  inline void set_controller(::google::protobuf::int32 value);
  
  // optional int32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XRankUpd)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 mode_idx_;
  ::google::protobuf::int32 controller_;
  ::google::protobuf::int32 ranking_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_XRankUpd* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SetPlayerEloDisplayBracket : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SetPlayerEloDisplayBracket();
  virtual ~CCSUsrMsg_SetPlayerEloDisplayBracket();
  
  CCSUsrMsg_SetPlayerEloDisplayBracket(const CCSUsrMsg_SetPlayerEloDisplayBracket& from);
  
  inline CCSUsrMsg_SetPlayerEloDisplayBracket& operator=(const CCSUsrMsg_SetPlayerEloDisplayBracket& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SetPlayerEloDisplayBracket& default_instance();
  
  void Swap(CCSUsrMsg_SetPlayerEloDisplayBracket* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_SetPlayerEloDisplayBracket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SetPlayerEloDisplayBracket& from);
  void MergeFrom(const CCSUsrMsg_SetPlayerEloDisplayBracket& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 bracket = 1;
  inline bool has_bracket() const;
  inline void clear_bracket();
  static const int kBracketFieldNumber = 1;
  inline ::google::protobuf::int32 bracket() const;
  inline void set_bracket(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SetPlayerEloDisplayBracket)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 bracket_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_SetPlayerEloDisplayBracket* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RequestEloBracketInfo : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RequestEloBracketInfo();
  virtual ~CCSUsrMsg_RequestEloBracketInfo();
  
  CCSUsrMsg_RequestEloBracketInfo(const CCSUsrMsg_RequestEloBracketInfo& from);
  
  inline CCSUsrMsg_RequestEloBracketInfo& operator=(const CCSUsrMsg_RequestEloBracketInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RequestEloBracketInfo& default_instance();
  
  void Swap(CCSUsrMsg_RequestEloBracketInfo* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_RequestEloBracketInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RequestEloBracketInfo& from);
  void MergeFrom(const CCSUsrMsg_RequestEloBracketInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 bracket = 1;
  inline bool has_bracket() const;
  inline void clear_bracket();
  static const int kBracketFieldNumber = 1;
  inline ::google::protobuf::int32 bracket() const;
  inline void set_bracket(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RequestEloBracketInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 bracket_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_RequestEloBracketInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SetEloBracketInfo : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SetEloBracketInfo();
  virtual ~CCSUsrMsg_SetEloBracketInfo();
  
  CCSUsrMsg_SetEloBracketInfo(const CCSUsrMsg_SetEloBracketInfo& from);
  
  inline CCSUsrMsg_SetEloBracketInfo& operator=(const CCSUsrMsg_SetEloBracketInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SetEloBracketInfo& default_instance();
  
  void Swap(CCSUsrMsg_SetEloBracketInfo* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_SetEloBracketInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SetEloBracketInfo& from);
  void MergeFrom(const CCSUsrMsg_SetEloBracketInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 game_mode = 1;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 1;
  inline ::google::protobuf::int32 game_mode() const;
  inline void set_game_mode(::google::protobuf::int32 value);
  
  // optional int32 display_bracket = 2;
  inline bool has_display_bracket() const;
  inline void clear_display_bracket();
  static const int kDisplayBracketFieldNumber = 2;
  inline ::google::protobuf::int32 display_bracket() const;
  inline void set_display_bracket(::google::protobuf::int32 value);
  
  // optional int32 prev_bracket = 3;
  inline bool has_prev_bracket() const;
  inline void clear_prev_bracket();
  static const int kPrevBracketFieldNumber = 3;
  inline ::google::protobuf::int32 prev_bracket() const;
  inline void set_prev_bracket(::google::protobuf::int32 value);
  
  // optional int32 num_games_in_bracket = 4;
  inline bool has_num_games_in_bracket() const;
  inline void clear_num_games_in_bracket();
  static const int kNumGamesInBracketFieldNumber = 4;
  inline ::google::protobuf::int32 num_games_in_bracket() const;
  inline void set_num_games_in_bracket(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SetEloBracketInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 game_mode_;
  ::google::protobuf::int32 display_bracket_;
  ::google::protobuf::int32 prev_bracket_;
  ::google::protobuf::int32 num_games_in_bracket_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_SetEloBracketInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CallVoteFailed : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CallVoteFailed();
  virtual ~CCSUsrMsg_CallVoteFailed();
  
  CCSUsrMsg_CallVoteFailed(const CCSUsrMsg_CallVoteFailed& from);
  
  inline CCSUsrMsg_CallVoteFailed& operator=(const CCSUsrMsg_CallVoteFailed& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CallVoteFailed& default_instance();
  
  void Swap(CCSUsrMsg_CallVoteFailed* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_CallVoteFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CallVoteFailed& from);
  void MergeFrom(const CCSUsrMsg_CallVoteFailed& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);
  
  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CallVoteFailed)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 reason_;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_CallVoteFailed* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteStart : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoteStart();
  virtual ~CCSUsrMsg_VoteStart();
  
  CCSUsrMsg_VoteStart(const CCSUsrMsg_VoteStart& from);
  
  inline CCSUsrMsg_VoteStart& operator=(const CCSUsrMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteStart& default_instance();
  
  void Swap(CCSUsrMsg_VoteStart* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VoteStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoteStart& from);
  void MergeFrom(const CCSUsrMsg_VoteStart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);
  
  // optional int32 ent_idx = 2;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 2;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);
  
  // optional int32 vote_type = 3;
  inline bool has_vote_type() const;
  inline void clear_vote_type();
  static const int kVoteTypeFieldNumber = 3;
  inline ::google::protobuf::int32 vote_type() const;
  inline void set_vote_type(::google::protobuf::int32 value);
  
  // optional string disp_str = 4;
  inline bool has_disp_str() const;
  inline void clear_disp_str();
  static const int kDispStrFieldNumber = 4;
  inline const ::std::string& disp_str() const;
  inline void set_disp_str(const ::std::string& value);
  inline void set_disp_str(const char* value);
  inline void set_disp_str(const char* value, size_t size);
  inline ::std::string* mutable_disp_str();
  
  // optional string details_str = 5;
  inline bool has_details_str() const;
  inline void clear_details_str();
  static const int kDetailsStrFieldNumber = 5;
  inline const ::std::string& details_str() const;
  inline void set_details_str(const ::std::string& value);
  inline void set_details_str(const char* value);
  inline void set_details_str(const char* value, size_t size);
  inline ::std::string* mutable_details_str();
  
  // optional string other_team_str = 6;
  inline bool has_other_team_str() const;
  inline void clear_other_team_str();
  static const int kOtherTeamStrFieldNumber = 6;
  inline const ::std::string& other_team_str() const;
  inline void set_other_team_str(const ::std::string& value);
  inline void set_other_team_str(const char* value);
  inline void set_other_team_str(const char* value, size_t size);
  inline ::std::string* mutable_other_team_str();
  
  // optional bool is_yes_no_vote = 7;
  inline bool has_is_yes_no_vote() const;
  inline void clear_is_yes_no_vote();
  static const int kIsYesNoVoteFieldNumber = 7;
  inline bool is_yes_no_vote() const;
  inline void set_is_yes_no_vote(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteStart)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 ent_idx_;
  ::google::protobuf::int32 vote_type_;
  ::std::string* disp_str_;
  static const ::std::string _default_disp_str_;
  ::std::string* details_str_;
  static const ::std::string _default_details_str_;
  ::std::string* other_team_str_;
  static const ::std::string _default_other_team_str_;
  bool is_yes_no_vote_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VoteStart* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VotePass : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VotePass();
  virtual ~CCSUsrMsg_VotePass();
  
  CCSUsrMsg_VotePass(const CCSUsrMsg_VotePass& from);
  
  inline CCSUsrMsg_VotePass& operator=(const CCSUsrMsg_VotePass& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VotePass& default_instance();
  
  void Swap(CCSUsrMsg_VotePass* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VotePass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VotePass& from);
  void MergeFrom(const CCSUsrMsg_VotePass& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);
  
  // optional int32 vote_type = 2;
  inline bool has_vote_type() const;
  inline void clear_vote_type();
  static const int kVoteTypeFieldNumber = 2;
  inline ::google::protobuf::int32 vote_type() const;
  inline void set_vote_type(::google::protobuf::int32 value);
  
  // optional string disp_str = 3;
  inline bool has_disp_str() const;
  inline void clear_disp_str();
  static const int kDispStrFieldNumber = 3;
  inline const ::std::string& disp_str() const;
  inline void set_disp_str(const ::std::string& value);
  inline void set_disp_str(const char* value);
  inline void set_disp_str(const char* value, size_t size);
  inline ::std::string* mutable_disp_str();
  
  // optional string details_str = 4;
  inline bool has_details_str() const;
  inline void clear_details_str();
  static const int kDetailsStrFieldNumber = 4;
  inline const ::std::string& details_str() const;
  inline void set_details_str(const ::std::string& value);
  inline void set_details_str(const char* value);
  inline void set_details_str(const char* value, size_t size);
  inline ::std::string* mutable_details_str();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VotePass)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 vote_type_;
  ::std::string* disp_str_;
  static const ::std::string _default_disp_str_;
  ::std::string* details_str_;
  static const ::std::string _default_details_str_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VotePass* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteFailed : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoteFailed();
  virtual ~CCSUsrMsg_VoteFailed();
  
  CCSUsrMsg_VoteFailed(const CCSUsrMsg_VoteFailed& from);
  
  inline CCSUsrMsg_VoteFailed& operator=(const CCSUsrMsg_VoteFailed& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteFailed& default_instance();
  
  void Swap(CCSUsrMsg_VoteFailed* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VoteFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoteFailed& from);
  void MergeFrom(const CCSUsrMsg_VoteFailed& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);
  
  // optional int32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteFailed)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 reason_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VoteFailed* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteSetup : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoteSetup();
  virtual ~CCSUsrMsg_VoteSetup();
  
  CCSUsrMsg_VoteSetup(const CCSUsrMsg_VoteSetup& from);
  
  inline CCSUsrMsg_VoteSetup& operator=(const CCSUsrMsg_VoteSetup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteSetup& default_instance();
  
  void Swap(CCSUsrMsg_VoteSetup* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_VoteSetup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoteSetup& from);
  void MergeFrom(const CCSUsrMsg_VoteSetup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string potential_issues = 1;
  inline int potential_issues_size() const;
  inline void clear_potential_issues();
  static const int kPotentialIssuesFieldNumber = 1;
  inline const ::std::string& potential_issues(int index) const;
  inline ::std::string* mutable_potential_issues(int index);
  inline void set_potential_issues(int index, const ::std::string& value);
  inline void set_potential_issues(int index, const char* value);
  inline void set_potential_issues(int index, const char* value, size_t size);
  inline ::std::string* add_potential_issues();
  inline void add_potential_issues(const ::std::string& value);
  inline void add_potential_issues(const char* value);
  inline void add_potential_issues(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& potential_issues() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_potential_issues();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteSetup)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> potential_issues_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_VoteSetup* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendLastKillerDamageToClient : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SendLastKillerDamageToClient();
  virtual ~CCSUsrMsg_SendLastKillerDamageToClient();
  
  CCSUsrMsg_SendLastKillerDamageToClient(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  
  inline CCSUsrMsg_SendLastKillerDamageToClient& operator=(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendLastKillerDamageToClient& default_instance();
  
  void Swap(CCSUsrMsg_SendLastKillerDamageToClient* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_SendLastKillerDamageToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  void MergeFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 num_hits_given = 1;
  inline bool has_num_hits_given() const;
  inline void clear_num_hits_given();
  static const int kNumHitsGivenFieldNumber = 1;
  inline ::google::protobuf::int32 num_hits_given() const;
  inline void set_num_hits_given(::google::protobuf::int32 value);
  
  // optional int32 damage_given = 2;
  inline bool has_damage_given() const;
  inline void clear_damage_given();
  static const int kDamageGivenFieldNumber = 2;
  inline ::google::protobuf::int32 damage_given() const;
  inline void set_damage_given(::google::protobuf::int32 value);
  
  // optional int32 num_hits_taken = 3;
  inline bool has_num_hits_taken() const;
  inline void clear_num_hits_taken();
  static const int kNumHitsTakenFieldNumber = 3;
  inline ::google::protobuf::int32 num_hits_taken() const;
  inline void set_num_hits_taken(::google::protobuf::int32 value);
  
  // optional int32 damage_taken = 4;
  inline bool has_damage_taken() const;
  inline void clear_damage_taken();
  static const int kDamageTakenFieldNumber = 4;
  inline ::google::protobuf::int32 damage_taken() const;
  inline void set_damage_taken(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendLastKillerDamageToClient)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 num_hits_given_;
  ::google::protobuf::int32 damage_given_;
  ::google::protobuf::int32 num_hits_taken_;
  ::google::protobuf::int32 damage_taken_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_SendLastKillerDamageToClient* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankUpdate_RankUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ServerRankUpdate_RankUpdate();
  virtual ~CCSUsrMsg_ServerRankUpdate_RankUpdate();
  
  CCSUsrMsg_ServerRankUpdate_RankUpdate(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  
  inline CCSUsrMsg_ServerRankUpdate_RankUpdate& operator=(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ServerRankUpdate_RankUpdate& default_instance();
  
  void Swap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ServerRankUpdate_RankUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  void MergeFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int32 account_id() const;
  inline void set_account_id(::google::protobuf::int32 value);
  
  // optional int32 rank_old = 2;
  inline bool has_rank_old() const;
  inline void clear_rank_old();
  static const int kRankOldFieldNumber = 2;
  inline ::google::protobuf::int32 rank_old() const;
  inline void set_rank_old(::google::protobuf::int32 value);
  
  // optional int32 rank_new = 3;
  inline bool has_rank_new() const;
  inline void clear_rank_new();
  static const int kRankNewFieldNumber = 3;
  inline ::google::protobuf::int32 rank_new() const;
  inline void set_rank_new(::google::protobuf::int32 value);
  
  // optional int32 num_wins = 4;
  inline bool has_num_wins() const;
  inline void clear_num_wins();
  static const int kNumWinsFieldNumber = 4;
  inline ::google::protobuf::int32 num_wins() const;
  inline void set_num_wins(::google::protobuf::int32 value);
  
  // optional float rank_change = 5;
  inline bool has_rank_change() const;
  inline void clear_rank_change();
  static const int kRankChangeFieldNumber = 5;
  inline float rank_change() const;
  inline void set_rank_change(float value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankUpdate.RankUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 account_id_;
  ::google::protobuf::int32 rank_old_;
  ::google::protobuf::int32 rank_new_;
  ::google::protobuf::int32 num_wins_;
  float rank_change_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ServerRankUpdate_RankUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ServerRankUpdate();
  virtual ~CCSUsrMsg_ServerRankUpdate();
  
  CCSUsrMsg_ServerRankUpdate(const CCSUsrMsg_ServerRankUpdate& from);
  
  inline CCSUsrMsg_ServerRankUpdate& operator=(const CCSUsrMsg_ServerRankUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ServerRankUpdate& default_instance();
  
  void Swap(CCSUsrMsg_ServerRankUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ServerRankUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ServerRankUpdate& from);
  void MergeFrom(const CCSUsrMsg_ServerRankUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CCSUsrMsg_ServerRankUpdate_RankUpdate RankUpdate;
  
  // accessors -------------------------------------------------------
  
  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  inline int rank_update_size() const;
  inline void clear_rank_update();
  static const int kRankUpdateFieldNumber = 1;
  inline const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& rank_update(int index) const;
  inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* mutable_rank_update(int index);
  inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* add_rank_update();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
      rank_update() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
      mutable_rank_update();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate > rank_update_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ServerRankUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemPickup : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ItemPickup();
  virtual ~CCSUsrMsg_ItemPickup();
  
  CCSUsrMsg_ItemPickup(const CCSUsrMsg_ItemPickup& from);
  
  inline CCSUsrMsg_ItemPickup& operator=(const CCSUsrMsg_ItemPickup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ItemPickup& default_instance();
  
  void Swap(CCSUsrMsg_ItemPickup* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ItemPickup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ItemPickup& from);
  void MergeFrom(const CCSUsrMsg_ItemPickup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::std::string& item() const;
  inline void set_item(const ::std::string& value);
  inline void set_item(const char* value);
  inline void set_item(const char* value, size_t size);
  inline ::std::string* mutable_item();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemPickup)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* item_;
  static const ::std::string _default_item_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ItemPickup* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ShowMenu : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ShowMenu();
  virtual ~CCSUsrMsg_ShowMenu();
  
  CCSUsrMsg_ShowMenu(const CCSUsrMsg_ShowMenu& from);
  
  inline CCSUsrMsg_ShowMenu& operator=(const CCSUsrMsg_ShowMenu& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ShowMenu& default_instance();
  
  void Swap(CCSUsrMsg_ShowMenu* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ShowMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ShowMenu& from);
  void MergeFrom(const CCSUsrMsg_ShowMenu& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 bits_valid_slots = 1;
  inline bool has_bits_valid_slots() const;
  inline void clear_bits_valid_slots();
  static const int kBitsValidSlotsFieldNumber = 1;
  inline ::google::protobuf::int32 bits_valid_slots() const;
  inline void set_bits_valid_slots(::google::protobuf::int32 value);
  
  // optional int32 display_time = 2;
  inline bool has_display_time() const;
  inline void clear_display_time();
  static const int kDisplayTimeFieldNumber = 2;
  inline ::google::protobuf::int32 display_time() const;
  inline void set_display_time(::google::protobuf::int32 value);
  
  // optional string menu_string = 3;
  inline bool has_menu_string() const;
  inline void clear_menu_string();
  static const int kMenuStringFieldNumber = 3;
  inline const ::std::string& menu_string() const;
  inline void set_menu_string(const ::std::string& value);
  inline void set_menu_string(const char* value);
  inline void set_menu_string(const char* value, size_t size);
  inline ::std::string* mutable_menu_string();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ShowMenu)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 bits_valid_slots_;
  ::google::protobuf::int32 display_time_;
  ::std::string* menu_string_;
  static const ::std::string _default_menu_string_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ShowMenu* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_BarTime : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_BarTime();
  virtual ~CCSUsrMsg_BarTime();
  
  CCSUsrMsg_BarTime(const CCSUsrMsg_BarTime& from);
  
  inline CCSUsrMsg_BarTime& operator=(const CCSUsrMsg_BarTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_BarTime& default_instance();
  
  void Swap(CCSUsrMsg_BarTime* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_BarTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_BarTime& from);
  void MergeFrom(const CCSUsrMsg_BarTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_BarTime)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* time_;
  static const ::std::string _default_time_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_BarTime* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AmmoDenied : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_AmmoDenied();
  virtual ~CCSUsrMsg_AmmoDenied();
  
  CCSUsrMsg_AmmoDenied(const CCSUsrMsg_AmmoDenied& from);
  
  inline CCSUsrMsg_AmmoDenied& operator=(const CCSUsrMsg_AmmoDenied& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AmmoDenied& default_instance();
  
  void Swap(CCSUsrMsg_AmmoDenied* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_AmmoDenied* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_AmmoDenied& from);
  void MergeFrom(const CCSUsrMsg_AmmoDenied& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ammoIdx = 1;
  inline bool has_ammoidx() const;
  inline void clear_ammoidx();
  static const int kAmmoIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ammoidx() const;
  inline void set_ammoidx(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AmmoDenied)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ammoidx_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_AmmoDenied* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MarkAchievement : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_MarkAchievement();
  virtual ~CCSUsrMsg_MarkAchievement();
  
  CCSUsrMsg_MarkAchievement(const CCSUsrMsg_MarkAchievement& from);
  
  inline CCSUsrMsg_MarkAchievement& operator=(const CCSUsrMsg_MarkAchievement& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MarkAchievement& default_instance();
  
  void Swap(CCSUsrMsg_MarkAchievement* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_MarkAchievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_MarkAchievement& from);
  void MergeFrom(const CCSUsrMsg_MarkAchievement& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string achievement = 1;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  inline const ::std::string& achievement() const;
  inline void set_achievement(const ::std::string& value);
  inline void set_achievement(const char* value);
  inline void set_achievement(const char* value, size_t size);
  inline ::std::string* mutable_achievement();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MarkAchievement)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* achievement_;
  static const ::std::string _default_achievement_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_MarkAchievement* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchStatsUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_MatchStatsUpdate();
  virtual ~CCSUsrMsg_MatchStatsUpdate();
  
  CCSUsrMsg_MatchStatsUpdate(const CCSUsrMsg_MatchStatsUpdate& from);
  
  inline CCSUsrMsg_MatchStatsUpdate& operator=(const CCSUsrMsg_MatchStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MatchStatsUpdate& default_instance();
  
  void Swap(CCSUsrMsg_MatchStatsUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_MatchStatsUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_MatchStatsUpdate& from);
  void MergeFrom(const CCSUsrMsg_MatchStatsUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string update = 1;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 1;
  inline const ::std::string& update() const;
  inline void set_update(const ::std::string& value);
  inline void set_update(const char* value);
  inline void set_update(const char* value, size_t size);
  inline ::std::string* mutable_update();
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchStatsUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* update_;
  static const ::std::string _default_update_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_MatchStatsUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemDrop : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ItemDrop();
  virtual ~CCSUsrMsg_ItemDrop();
  
  CCSUsrMsg_ItemDrop(const CCSUsrMsg_ItemDrop& from);
  
  inline CCSUsrMsg_ItemDrop& operator=(const CCSUsrMsg_ItemDrop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ItemDrop& default_instance();
  
  void Swap(CCSUsrMsg_ItemDrop* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ItemDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ItemDrop& from);
  void MergeFrom(const CCSUsrMsg_ItemDrop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);
  
  // optional bool death = 2;
  inline bool has_death() const;
  inline void clear_death();
  static const int kDeathFieldNumber = 2;
  inline bool death() const;
  inline void set_death(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemDrop)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 itemid_;
  bool death_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ItemDrop* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ResetHud : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ResetHud();
  virtual ~CCSUsrMsg_ResetHud();
  
  CCSUsrMsg_ResetHud(const CCSUsrMsg_ResetHud& from);
  
  inline CCSUsrMsg_ResetHud& operator=(const CCSUsrMsg_ResetHud& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ResetHud& default_instance();
  
  void Swap(CCSUsrMsg_ResetHud* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ResetHud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ResetHud& from);
  void MergeFrom(const CCSUsrMsg_ResetHud& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool reset = 1;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 1;
  inline bool reset() const;
  inline void set_reset(bool value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ResetHud)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool reset_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ResetHud* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GameTitle : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_GameTitle();
  virtual ~CCSUsrMsg_GameTitle();
  
  CCSUsrMsg_GameTitle(const CCSUsrMsg_GameTitle& from);
  
  inline CCSUsrMsg_GameTitle& operator=(const CCSUsrMsg_GameTitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_GameTitle& default_instance();
  
  void Swap(CCSUsrMsg_GameTitle* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_GameTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_GameTitle& from);
  void MergeFrom(const CCSUsrMsg_GameTitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GameTitle)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_GameTitle* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RequestState : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RequestState();
  virtual ~CCSUsrMsg_RequestState();
  
  CCSUsrMsg_RequestState(const CCSUsrMsg_RequestState& from);
  
  inline CCSUsrMsg_RequestState& operator=(const CCSUsrMsg_RequestState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RequestState& default_instance();
  
  void Swap(CCSUsrMsg_RequestState* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_RequestState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RequestState& from);
  void MergeFrom(const CCSUsrMsg_RequestState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RequestState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_RequestState* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_StopSpectatorMode : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_StopSpectatorMode();
  virtual ~CCSUsrMsg_StopSpectatorMode();
  
  CCSUsrMsg_StopSpectatorMode(const CCSUsrMsg_StopSpectatorMode& from);
  
  inline CCSUsrMsg_StopSpectatorMode& operator=(const CCSUsrMsg_StopSpectatorMode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_StopSpectatorMode& default_instance();
  
  void Swap(CCSUsrMsg_StopSpectatorMode* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_StopSpectatorMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_StopSpectatorMode& from);
  void MergeFrom(const CCSUsrMsg_StopSpectatorMode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_StopSpectatorMode)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_StopSpectatorMode* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisconnectToLobby : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_DisconnectToLobby();
  virtual ~CCSUsrMsg_DisconnectToLobby();
  
  CCSUsrMsg_DisconnectToLobby(const CCSUsrMsg_DisconnectToLobby& from);
  
  inline CCSUsrMsg_DisconnectToLobby& operator=(const CCSUsrMsg_DisconnectToLobby& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DisconnectToLobby& default_instance();
  
  void Swap(CCSUsrMsg_DisconnectToLobby* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_DisconnectToLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_DisconnectToLobby& from);
  void MergeFrom(const CCSUsrMsg_DisconnectToLobby& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisconnectToLobby)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_DisconnectToLobby* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_WarmupHasEnded : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_WarmupHasEnded();
  virtual ~CCSUsrMsg_WarmupHasEnded();
  
  CCSUsrMsg_WarmupHasEnded(const CCSUsrMsg_WarmupHasEnded& from);
  
  inline CCSUsrMsg_WarmupHasEnded& operator=(const CCSUsrMsg_WarmupHasEnded& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_WarmupHasEnded& default_instance();
  
  void Swap(CCSUsrMsg_WarmupHasEnded* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_WarmupHasEnded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_WarmupHasEnded& from);
  void MergeFrom(const CCSUsrMsg_WarmupHasEnded& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_WarmupHasEnded)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_WarmupHasEnded* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ClientInfo : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ClientInfo();
  virtual ~CCSUsrMsg_ClientInfo();
  
  CCSUsrMsg_ClientInfo(const CCSUsrMsg_ClientInfo& from);
  
  inline CCSUsrMsg_ClientInfo& operator=(const CCSUsrMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ClientInfo& default_instance();
  
  void Swap(CCSUsrMsg_ClientInfo* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ClientInfo& from);
  void MergeFrom(const CCSUsrMsg_ClientInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ClientInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankRevealAll : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ServerRankRevealAll();
  virtual ~CCSUsrMsg_ServerRankRevealAll();
  
  CCSUsrMsg_ServerRankRevealAll(const CCSUsrMsg_ServerRankRevealAll& from);
  
  inline CCSUsrMsg_ServerRankRevealAll& operator=(const CCSUsrMsg_ServerRankRevealAll& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ServerRankRevealAll& default_instance();
  
  void Swap(CCSUsrMsg_ServerRankRevealAll* other);
  
  // implements Message ----------------------------------------------
  
  CCSUsrMsg_ServerRankRevealAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ServerRankRevealAll& from);
  void MergeFrom(const CCSUsrMsg_ServerRankRevealAll& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankRevealAll)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dummy_;
  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCSUsrMsg_ServerRankRevealAll* default_instance_;
};
// ===================================================================


// ===================================================================

// CCSUsrMsg_VGUIMenu_Subkey

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_name() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::name() const {
  return *name_;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string str = 2;
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_str() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_str() {
  if (str_ != &_default_str_) {
    str_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::str() const {
  return *str_;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const ::std::string& value) {
  _set_bit(1);
  if (str_ == &_default_str_) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value) {
  _set_bit(1);
  if (str_ == &_default_str_) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value, size_t size) {
  _set_bit(1);
  if (str_ == &_default_str_) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_str() {
  _set_bit(1);
  if (str_ == &_default_str_) {
    str_ = new ::std::string;
  }
  return str_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VGUIMenu

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu::has_name() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_VGUIMenu::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_VGUIMenu::name() const {
  return *name_;
}
inline void CCSUsrMsg_VGUIMenu::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VGUIMenu::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional bool show = 2;
inline bool CCSUsrMsg_VGUIMenu::has_show() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VGUIMenu::clear_show() {
  show_ = false;
  _clear_bit(1);
}
inline bool CCSUsrMsg_VGUIMenu::show() const {
  return show_;
}
inline void CCSUsrMsg_VGUIMenu::set_show(bool value) {
  _set_bit(1);
  show_ = value;
}

// repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
inline int CCSUsrMsg_VGUIMenu::subkeys_size() const {
  return subkeys_.size();
}
inline void CCSUsrMsg_VGUIMenu::clear_subkeys() {
  subkeys_.Clear();
}
inline const ::CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu::subkeys(int index) const {
  return subkeys_.Get(index);
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::mutable_subkeys(int index) {
  return subkeys_.Mutable(index);
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::add_subkeys() {
  return subkeys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
CCSUsrMsg_VGUIMenu::subkeys() const {
  return subkeys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
CCSUsrMsg_VGUIMenu::mutable_subkeys() {
  return &subkeys_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Geiger

// optional int32 range = 1;
inline bool CCSUsrMsg_Geiger::has_range() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_Geiger::clear_range() {
  range_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_Geiger::range() const {
  return range_;
}
inline void CCSUsrMsg_Geiger::set_range(::google::protobuf::int32 value) {
  _set_bit(0);
  range_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Train

// optional int32 train = 1;
inline bool CCSUsrMsg_Train::has_train() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_Train::clear_train() {
  train_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_Train::train() const {
  return train_;
}
inline void CCSUsrMsg_Train::set_train(::google::protobuf::int32 value) {
  _set_bit(0);
  train_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudText

// optional string text = 1;
inline bool CCSUsrMsg_HudText::has_text() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_HudText::clear_text() {
  if (text_ != &_default_text_) {
    text_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_HudText::text() const {
  return *text_;
}
inline void CCSUsrMsg_HudText::set_text(const ::std::string& value) {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudText::set_text(const char* value) {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudText::set_text(const char* value, size_t size) {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_HudText::mutable_text() {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  return text_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText::has_ent_idx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_SayText::clear_ent_idx() {
  ent_idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_SayText::ent_idx() const {
  return ent_idx_;
}
inline void CCSUsrMsg_SayText::set_ent_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  ent_idx_ = value;
}

// optional string text = 2;
inline bool CCSUsrMsg_SayText::has_text() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_SayText::clear_text() {
  if (text_ != &_default_text_) {
    text_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CCSUsrMsg_SayText::text() const {
  return *text_;
}
inline void CCSUsrMsg_SayText::set_text(const ::std::string& value) {
  _set_bit(1);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_SayText::set_text(const char* value) {
  _set_bit(1);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_SayText::set_text(const char* value, size_t size) {
  _set_bit(1);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SayText::mutable_text() {
  _set_bit(1);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  return text_;
}

// optional bool chat = 3;
inline bool CCSUsrMsg_SayText::has_chat() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_SayText::clear_chat() {
  chat_ = false;
  _clear_bit(2);
}
inline bool CCSUsrMsg_SayText::chat() const {
  return chat_;
}
inline void CCSUsrMsg_SayText::set_chat(bool value) {
  _set_bit(2);
  chat_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText2

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText2::has_ent_idx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_SayText2::clear_ent_idx() {
  ent_idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_SayText2::ent_idx() const {
  return ent_idx_;
}
inline void CCSUsrMsg_SayText2::set_ent_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  ent_idx_ = value;
}

// optional bool chat = 2;
inline bool CCSUsrMsg_SayText2::has_chat() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_SayText2::clear_chat() {
  chat_ = false;
  _clear_bit(1);
}
inline bool CCSUsrMsg_SayText2::chat() const {
  return chat_;
}
inline void CCSUsrMsg_SayText2::set_chat(bool value) {
  _set_bit(1);
  chat_ = value;
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_SayText2::has_msg_name() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_SayText2::clear_msg_name() {
  if (msg_name_ != &_default_msg_name_) {
    msg_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCSUsrMsg_SayText2::msg_name() const {
  return *msg_name_;
}
inline void CCSUsrMsg_SayText2::set_msg_name(const ::std::string& value) {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_SayText2::set_msg_name(const char* value) {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_SayText2::set_msg_name(const char* value, size_t size) {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SayText2::mutable_msg_name() {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}

// repeated string params = 4;
inline int CCSUsrMsg_SayText2::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_SayText2::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_SayText2::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_SayText2::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SayText2::add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_SayText2::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_SayText2::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_SayText2::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_SayText2::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_SayText2::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_TextMsg

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_TextMsg::has_msg_dst() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_TextMsg::clear_msg_dst() {
  msg_dst_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_TextMsg::msg_dst() const {
  return msg_dst_;
}
inline void CCSUsrMsg_TextMsg::set_msg_dst(::google::protobuf::int32 value) {
  _set_bit(0);
  msg_dst_ = value;
}

// repeated string params = 3;
inline int CCSUsrMsg_TextMsg::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_TextMsg::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_TextMsg::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_TextMsg::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_TextMsg::add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_TextMsg::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_TextMsg::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_TextMsg::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudMsg

// optional int32 channel = 1;
inline bool CCSUsrMsg_HudMsg::has_channel() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_HudMsg::clear_channel() {
  channel_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_HudMsg::channel() const {
  return channel_;
}
inline void CCSUsrMsg_HudMsg::set_channel(::google::protobuf::int32 value) {
  _set_bit(0);
  channel_ = value;
}

// optional .CMsgVector2D pos = 2;
inline bool CCSUsrMsg_HudMsg::has_pos() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_HudMsg::clear_pos() {
  if (pos_ != NULL) pos_->::CMsgVector2D::Clear();
  _clear_bit(1);
}
inline const ::CMsgVector2D& CCSUsrMsg_HudMsg::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::mutable_pos() {
  _set_bit(1);
  if (pos_ == NULL) pos_ = new ::CMsgVector2D;
  return pos_;
}

// optional .CMsgRGBA clr1 = 3;
inline bool CCSUsrMsg_HudMsg::has_clr1() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_HudMsg::clear_clr1() {
  if (clr1_ != NULL) clr1_->::CMsgRGBA::Clear();
  _clear_bit(2);
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr1() const {
  return clr1_ != NULL ? *clr1_ : *default_instance_->clr1_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr1() {
  _set_bit(2);
  if (clr1_ == NULL) clr1_ = new ::CMsgRGBA;
  return clr1_;
}

// optional .CMsgRGBA clr2 = 4;
inline bool CCSUsrMsg_HudMsg::has_clr2() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_HudMsg::clear_clr2() {
  if (clr2_ != NULL) clr2_->::CMsgRGBA::Clear();
  _clear_bit(3);
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr2() const {
  return clr2_ != NULL ? *clr2_ : *default_instance_->clr2_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr2() {
  _set_bit(3);
  if (clr2_ == NULL) clr2_ = new ::CMsgRGBA;
  return clr2_;
}

// optional int32 effect = 5;
inline bool CCSUsrMsg_HudMsg::has_effect() const {
  return _has_bit(4);
}
inline void CCSUsrMsg_HudMsg::clear_effect() {
  effect_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CCSUsrMsg_HudMsg::effect() const {
  return effect_;
}
inline void CCSUsrMsg_HudMsg::set_effect(::google::protobuf::int32 value) {
  _set_bit(4);
  effect_ = value;
}

// optional float fade_in_time = 6;
inline bool CCSUsrMsg_HudMsg::has_fade_in_time() const {
  return _has_bit(5);
}
inline void CCSUsrMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  _clear_bit(5);
}
inline float CCSUsrMsg_HudMsg::fade_in_time() const {
  return fade_in_time_;
}
inline void CCSUsrMsg_HudMsg::set_fade_in_time(float value) {
  _set_bit(5);
  fade_in_time_ = value;
}

// optional float fade_out_time = 7;
inline bool CCSUsrMsg_HudMsg::has_fade_out_time() const {
  return _has_bit(6);
}
inline void CCSUsrMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  _clear_bit(6);
}
inline float CCSUsrMsg_HudMsg::fade_out_time() const {
  return fade_out_time_;
}
inline void CCSUsrMsg_HudMsg::set_fade_out_time(float value) {
  _set_bit(6);
  fade_out_time_ = value;
}

// optional float hold_time = 9;
inline bool CCSUsrMsg_HudMsg::has_hold_time() const {
  return _has_bit(7);
}
inline void CCSUsrMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  _clear_bit(7);
}
inline float CCSUsrMsg_HudMsg::hold_time() const {
  return hold_time_;
}
inline void CCSUsrMsg_HudMsg::set_hold_time(float value) {
  _set_bit(7);
  hold_time_ = value;
}

// optional float fx_time = 10;
inline bool CCSUsrMsg_HudMsg::has_fx_time() const {
  return _has_bit(8);
}
inline void CCSUsrMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  _clear_bit(8);
}
inline float CCSUsrMsg_HudMsg::fx_time() const {
  return fx_time_;
}
inline void CCSUsrMsg_HudMsg::set_fx_time(float value) {
  _set_bit(8);
  fx_time_ = value;
}

// optional string text = 11;
inline bool CCSUsrMsg_HudMsg::has_text() const {
  return _has_bit(9);
}
inline void CCSUsrMsg_HudMsg::clear_text() {
  if (text_ != &_default_text_) {
    text_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CCSUsrMsg_HudMsg::text() const {
  return *text_;
}
inline void CCSUsrMsg_HudMsg::set_text(const ::std::string& value) {
  _set_bit(9);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudMsg::set_text(const char* value) {
  _set_bit(9);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudMsg::set_text(const char* value, size_t size) {
  _set_bit(9);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_HudMsg::mutable_text() {
  _set_bit(9);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  return text_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Shake

// optional int32 command = 1;
inline bool CCSUsrMsg_Shake::has_command() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_Shake::clear_command() {
  command_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_Shake::command() const {
  return command_;
}
inline void CCSUsrMsg_Shake::set_command(::google::protobuf::int32 value) {
  _set_bit(0);
  command_ = value;
}

// optional float local_amplitude = 2;
inline bool CCSUsrMsg_Shake::has_local_amplitude() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_Shake::clear_local_amplitude() {
  local_amplitude_ = 0;
  _clear_bit(1);
}
inline float CCSUsrMsg_Shake::local_amplitude() const {
  return local_amplitude_;
}
inline void CCSUsrMsg_Shake::set_local_amplitude(float value) {
  _set_bit(1);
  local_amplitude_ = value;
}

// optional float frequency = 3;
inline bool CCSUsrMsg_Shake::has_frequency() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_Shake::clear_frequency() {
  frequency_ = 0;
  _clear_bit(2);
}
inline float CCSUsrMsg_Shake::frequency() const {
  return frequency_;
}
inline void CCSUsrMsg_Shake::set_frequency(float value) {
  _set_bit(2);
  frequency_ = value;
}

// optional float duration = 4;
inline bool CCSUsrMsg_Shake::has_duration() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_Shake::clear_duration() {
  duration_ = 0;
  _clear_bit(3);
}
inline float CCSUsrMsg_Shake::duration() const {
  return duration_;
}
inline void CCSUsrMsg_Shake::set_duration(float value) {
  _set_bit(3);
  duration_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Fade

// optional int32 duration = 1;
inline bool CCSUsrMsg_Fade::has_duration() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_Fade::clear_duration() {
  duration_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::duration() const {
  return duration_;
}
inline void CCSUsrMsg_Fade::set_duration(::google::protobuf::int32 value) {
  _set_bit(0);
  duration_ = value;
}

// optional int32 hold_time = 2;
inline bool CCSUsrMsg_Fade::has_hold_time() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_Fade::clear_hold_time() {
  hold_time_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::hold_time() const {
  return hold_time_;
}
inline void CCSUsrMsg_Fade::set_hold_time(::google::protobuf::int32 value) {
  _set_bit(1);
  hold_time_ = value;
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Fade::has_flags() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_Fade::clear_flags() {
  flags_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::flags() const {
  return flags_;
}
inline void CCSUsrMsg_Fade::set_flags(::google::protobuf::int32 value) {
  _set_bit(2);
  flags_ = value;
}

// optional .CMsgRGBA clr = 4;
inline bool CCSUsrMsg_Fade::has_clr() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_Fade::clear_clr() {
  if (clr_ != NULL) clr_->::CMsgRGBA::Clear();
  _clear_bit(3);
}
inline const ::CMsgRGBA& CCSUsrMsg_Fade::clr() const {
  return clr_ != NULL ? *clr_ : *default_instance_->clr_;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::mutable_clr() {
  _set_bit(3);
  if (clr_ == NULL) clr_ = new ::CMsgRGBA;
  return clr_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Rumble

// optional int32 index = 1;
inline bool CCSUsrMsg_Rumble::has_index() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_Rumble::clear_index() {
  index_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::index() const {
  return index_;
}
inline void CCSUsrMsg_Rumble::set_index(::google::protobuf::int32 value) {
  _set_bit(0);
  index_ = value;
}

// optional int32 data = 2;
inline bool CCSUsrMsg_Rumble::has_data() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_Rumble::clear_data() {
  data_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::data() const {
  return data_;
}
inline void CCSUsrMsg_Rumble::set_data(::google::protobuf::int32 value) {
  _set_bit(1);
  data_ = value;
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Rumble::has_flags() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_Rumble::clear_flags() {
  flags_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::flags() const {
  return flags_;
}
inline void CCSUsrMsg_Rumble::set_flags(::google::protobuf::int32 value) {
  _set_bit(2);
  flags_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaption

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaption::has_hash() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCSUsrMsg_CloseCaption::hash() const {
  return hash_;
}
inline void CCSUsrMsg_CloseCaption::set_hash(::google::protobuf::uint32 value) {
  _set_bit(0);
  hash_ = value;
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaption::has_duration() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_CloseCaption::duration() const {
  return duration_;
}
inline void CCSUsrMsg_CloseCaption::set_duration(::google::protobuf::int32 value) {
  _set_bit(1);
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaption::has_from_player() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  _clear_bit(2);
}
inline bool CCSUsrMsg_CloseCaption::from_player() const {
  return from_player_;
}
inline void CCSUsrMsg_CloseCaption::set_from_player(bool value) {
  _set_bit(2);
  from_player_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaptionDirect

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaptionDirect::has_hash() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCSUsrMsg_CloseCaptionDirect::hash() const {
  return hash_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_hash(::google::protobuf::uint32 value) {
  _set_bit(0);
  hash_ = value;
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaptionDirect::has_duration() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_duration() {
  duration_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_CloseCaptionDirect::duration() const {
  return duration_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_duration(::google::protobuf::int32 value) {
  _set_bit(1);
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaptionDirect::has_from_player() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  _clear_bit(2);
}
inline bool CCSUsrMsg_CloseCaptionDirect::from_player() const {
  return from_player_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_from_player(bool value) {
  _set_bit(2);
  from_player_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendAudio

// optional string radio_sound = 1;
inline bool CCSUsrMsg_SendAudio::has_radio_sound() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_SendAudio::clear_radio_sound() {
  if (radio_sound_ != &_default_radio_sound_) {
    radio_sound_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_SendAudio::radio_sound() const {
  return *radio_sound_;
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const ::std::string& value) {
  _set_bit(0);
  if (radio_sound_ == &_default_radio_sound_) {
    radio_sound_ = new ::std::string;
  }
  radio_sound_->assign(value);
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const char* value) {
  _set_bit(0);
  if (radio_sound_ == &_default_radio_sound_) {
    radio_sound_ = new ::std::string;
  }
  radio_sound_->assign(value);
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const char* value, size_t size) {
  _set_bit(0);
  if (radio_sound_ == &_default_radio_sound_) {
    radio_sound_ = new ::std::string;
  }
  radio_sound_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SendAudio::mutable_radio_sound() {
  _set_bit(0);
  if (radio_sound_ == &_default_radio_sound_) {
    radio_sound_ = new ::std::string;
  }
  return radio_sound_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RawAudio

// optional int32 pitch = 1;
inline bool CCSUsrMsg_RawAudio::has_pitch() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_RawAudio::clear_pitch() {
  pitch_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_RawAudio::pitch() const {
  return pitch_;
}
inline void CCSUsrMsg_RawAudio::set_pitch(::google::protobuf::int32 value) {
  _set_bit(0);
  pitch_ = value;
}

// optional int32 entidx = 2;
inline bool CCSUsrMsg_RawAudio::has_entidx() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_RawAudio::clear_entidx() {
  entidx_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_RawAudio::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_RawAudio::set_entidx(::google::protobuf::int32 value) {
  _set_bit(1);
  entidx_ = value;
}

// optional float duration = 3;
inline bool CCSUsrMsg_RawAudio::has_duration() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_RawAudio::clear_duration() {
  duration_ = 0;
  _clear_bit(2);
}
inline float CCSUsrMsg_RawAudio::duration() const {
  return duration_;
}
inline void CCSUsrMsg_RawAudio::set_duration(float value) {
  _set_bit(2);
  duration_ = value;
}

// optional string voice_filename = 4;
inline bool CCSUsrMsg_RawAudio::has_voice_filename() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_RawAudio::clear_voice_filename() {
  if (voice_filename_ != &_default_voice_filename_) {
    voice_filename_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CCSUsrMsg_RawAudio::voice_filename() const {
  return *voice_filename_;
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const ::std::string& value) {
  _set_bit(3);
  if (voice_filename_ == &_default_voice_filename_) {
    voice_filename_ = new ::std::string;
  }
  voice_filename_->assign(value);
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const char* value) {
  _set_bit(3);
  if (voice_filename_ == &_default_voice_filename_) {
    voice_filename_ = new ::std::string;
  }
  voice_filename_->assign(value);
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const char* value, size_t size) {
  _set_bit(3);
  if (voice_filename_ == &_default_voice_filename_) {
    voice_filename_ = new ::std::string;
  }
  voice_filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RawAudio::mutable_voice_filename() {
  _set_bit(3);
  if (voice_filename_ == &_default_voice_filename_) {
    voice_filename_ = new ::std::string;
  }
  return voice_filename_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask_PlayerMask

// optional int32 game_rules_mask = 1;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_game_rules_mask() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_game_rules_mask() {
  game_rules_mask_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::game_rules_mask() const {
  return game_rules_mask_;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_game_rules_mask(::google::protobuf::int32 value) {
  _set_bit(0);
  game_rules_mask_ = value;
}

// optional int32 ban_masks = 2;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_ban_masks() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_ban_masks() {
  ban_masks_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::ban_masks() const {
  return ban_masks_;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_ban_masks(::google::protobuf::int32 value) {
  _set_bit(1);
  ban_masks_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask

// repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
inline int CCSUsrMsg_VoiceMask::player_masks_size() const {
  return player_masks_.size();
}
inline void CCSUsrMsg_VoiceMask::clear_player_masks() {
  player_masks_.Clear();
}
inline const ::CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask::player_masks(int index) const {
  return player_masks_.Get(index);
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::mutable_player_masks(int index) {
  return player_masks_.Mutable(index);
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::add_player_masks() {
  return player_masks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
CCSUsrMsg_VoiceMask::player_masks() const {
  return player_masks_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
CCSUsrMsg_VoiceMask::mutable_player_masks() {
  return &player_masks_;
}

// optional bool player_mod_enable = 2;
inline bool CCSUsrMsg_VoiceMask::has_player_mod_enable() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VoiceMask::clear_player_mod_enable() {
  player_mod_enable_ = false;
  _clear_bit(1);
}
inline bool CCSUsrMsg_VoiceMask::player_mod_enable() const {
  return player_mod_enable_;
}
inline void CCSUsrMsg_VoiceMask::set_player_mod_enable(bool value) {
  _set_bit(1);
  player_mod_enable_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Damage

// optional int32 amount = 1;
inline bool CCSUsrMsg_Damage::has_amount() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_Damage::clear_amount() {
  amount_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_Damage::amount() const {
  return amount_;
}
inline void CCSUsrMsg_Damage::set_amount(::google::protobuf::int32 value) {
  _set_bit(0);
  amount_ = value;
}

// optional .CMsgVector inflictor_world_pos = 2;
inline bool CCSUsrMsg_Damage::has_inflictor_world_pos() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_Damage::clear_inflictor_world_pos() {
  if (inflictor_world_pos_ != NULL) inflictor_world_pos_->::CMsgVector::Clear();
  _clear_bit(1);
}
inline const ::CMsgVector& CCSUsrMsg_Damage::inflictor_world_pos() const {
  return inflictor_world_pos_ != NULL ? *inflictor_world_pos_ : *default_instance_->inflictor_world_pos_;
}
inline ::CMsgVector* CCSUsrMsg_Damage::mutable_inflictor_world_pos() {
  _set_bit(1);
  if (inflictor_world_pos_ == NULL) inflictor_world_pos_ = new ::CMsgVector;
  return inflictor_world_pos_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RadioText

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_RadioText::has_msg_dst() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_RadioText::clear_msg_dst() {
  msg_dst_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_RadioText::msg_dst() const {
  return msg_dst_;
}
inline void CCSUsrMsg_RadioText::set_msg_dst(::google::protobuf::int32 value) {
  _set_bit(0);
  msg_dst_ = value;
}

// optional int32 client = 2;
inline bool CCSUsrMsg_RadioText::has_client() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_RadioText::clear_client() {
  client_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_RadioText::client() const {
  return client_;
}
inline void CCSUsrMsg_RadioText::set_client(::google::protobuf::int32 value) {
  _set_bit(1);
  client_ = value;
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_RadioText::has_msg_name() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_RadioText::clear_msg_name() {
  if (msg_name_ != &_default_msg_name_) {
    msg_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCSUsrMsg_RadioText::msg_name() const {
  return *msg_name_;
}
inline void CCSUsrMsg_RadioText::set_msg_name(const ::std::string& value) {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_RadioText::set_msg_name(const char* value) {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_RadioText::set_msg_name(const char* value, size_t size) {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RadioText::mutable_msg_name() {
  _set_bit(2);
  if (msg_name_ == &_default_msg_name_) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}

// repeated string params = 4;
inline int CCSUsrMsg_RadioText::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_RadioText::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_RadioText::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_RadioText::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RadioText::add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_RadioText::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_RadioText::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_RadioText::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_RadioText::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_RadioText::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HintText

// optional string text = 1;
inline bool CCSUsrMsg_HintText::has_text() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_HintText::clear_text() {
  if (text_ != &_default_text_) {
    text_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_HintText::text() const {
  return *text_;
}
inline void CCSUsrMsg_HintText::set_text(const ::std::string& value) {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HintText::set_text(const char* value) {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HintText::set_text(const char* value, size_t size) {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_HintText::mutable_text() {
  _set_bit(0);
  if (text_ == &_default_text_) {
    text_ = new ::std::string;
  }
  return text_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_KeyHintText

// repeated string hints = 1;
inline int CCSUsrMsg_KeyHintText::hints_size() const {
  return hints_.size();
}
inline void CCSUsrMsg_KeyHintText::clear_hints() {
  hints_.Clear();
}
inline const ::std::string& CCSUsrMsg_KeyHintText::hints(int index) const {
  return hints_.Get(index);
}
inline ::std::string* CCSUsrMsg_KeyHintText::mutable_hints(int index) {
  return hints_.Mutable(index);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const ::std::string& value) {
  hints_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value) {
  hints_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value, size_t size) {
  hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_KeyHintText::add_hints() {
  return hints_.Add();
}
inline void CCSUsrMsg_KeyHintText::add_hints(const ::std::string& value) {
  hints_.Add()->assign(value);
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value) {
  hints_.Add()->assign(value);
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value, size_t size) {
  hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_KeyHintText::hints() const {
  return hints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_KeyHintText::mutable_hints() {
  return &hints_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate

// optional int32 entity_idx = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_entity_idx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_entity_idx() {
  entity_idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::entity_idx() const {
  return entity_idx_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_entity_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  entity_idx_ = value;
}

// optional int32 class_id = 2;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_class_id() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_class_id() {
  class_id_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::class_id() const {
  return class_id_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_class_id(::google::protobuf::int32 value) {
  _set_bit(1);
  class_id_ = value;
}

// optional int32 origin_x = 3;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_x() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_x() {
  origin_x_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_x() const {
  return origin_x_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_x(::google::protobuf::int32 value) {
  _set_bit(2);
  origin_x_ = value;
}

// optional int32 origin_y = 4;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_y() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_y() {
  origin_y_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_y() const {
  return origin_y_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_y(::google::protobuf::int32 value) {
  _set_bit(3);
  origin_y_ = value;
}

// optional int32 origin_z = 5;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_z() const {
  return _has_bit(4);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_z() {
  origin_z_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_z() const {
  return origin_z_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_z(::google::protobuf::int32 value) {
  _set_bit(4);
  origin_z_ = value;
}

// optional int32 angle_y = 6;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_angle_y() const {
  return _has_bit(5);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_angle_y() {
  angle_y_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::angle_y() const {
  return angle_y_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_angle_y(::google::protobuf::int32 value) {
  _set_bit(5);
  angle_y_ = value;
}

// optional bool defuser = 7;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_defuser() const {
  return _has_bit(6);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_defuser() {
  defuser_ = false;
  _clear_bit(6);
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::defuser() const {
  return defuser_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_defuser(bool value) {
  _set_bit(6);
  defuser_ = value;
}

// optional bool player_has_defuser = 8;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_defuser() const {
  return _has_bit(7);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_defuser() {
  player_has_defuser_ = false;
  _clear_bit(7);
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_defuser() const {
  return player_has_defuser_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_defuser(bool value) {
  _set_bit(7);
  player_has_defuser_ = value;
}

// optional bool player_has_c4 = 9;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_c4() const {
  return _has_bit(8);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_c4() {
  player_has_c4_ = false;
  _clear_bit(8);
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_c4() const {
  return player_has_c4_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_c4(bool value) {
  _set_bit(8);
  player_has_c4_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate

// optional bool new_update = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::has_new_update() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_new_update() {
  new_update_ = false;
  _clear_bit(0);
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::new_update() const {
  return new_update_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::set_new_update(bool value) {
  _set_bit(0);
  new_update_ = value;
}

// repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
inline int CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates_size() const {
  return entity_updates_.size();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_entity_updates() {
  entity_updates_.Clear();
}
inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates(int index) const {
  return entity_updates_.Get(index);
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates(int index) {
  return entity_updates_.Mutable(index);
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::add_entity_updates() {
  return entity_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates() const {
  return entity_updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates() {
  return &entity_updates_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ReloadEffect

// optional int32 entidx = 1;
inline bool CCSUsrMsg_ReloadEffect::has_entidx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ReloadEffect::clear_entidx() {
  entidx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_ReloadEffect::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_ReloadEffect::set_entidx(::google::protobuf::int32 value) {
  _set_bit(0);
  entidx_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_AdjustMoney

// optional int32 amount = 1;
inline bool CCSUsrMsg_AdjustMoney::has_amount() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_AdjustMoney::clear_amount() {
  amount_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_AdjustMoney::amount() const {
  return amount_;
}
inline void CCSUsrMsg_AdjustMoney::set_amount(::google::protobuf::int32 value) {
  _set_bit(0);
  amount_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_KillCam

// optional int32 obs_mode = 1;
inline bool CCSUsrMsg_KillCam::has_obs_mode() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_KillCam::clear_obs_mode() {
  obs_mode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::obs_mode() const {
  return obs_mode_;
}
inline void CCSUsrMsg_KillCam::set_obs_mode(::google::protobuf::int32 value) {
  _set_bit(0);
  obs_mode_ = value;
}

// optional int32 first_target = 2;
inline bool CCSUsrMsg_KillCam::has_first_target() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_KillCam::clear_first_target() {
  first_target_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::first_target() const {
  return first_target_;
}
inline void CCSUsrMsg_KillCam::set_first_target(::google::protobuf::int32 value) {
  _set_bit(1);
  first_target_ = value;
}

// optional int32 second_target = 3;
inline bool CCSUsrMsg_KillCam::has_second_target() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_KillCam::clear_second_target() {
  second_target_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::second_target() const {
  return second_target_;
}
inline void CCSUsrMsg_KillCam::set_second_target(::google::protobuf::int32 value) {
  _set_bit(2);
  second_target_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_DesiredTimescale

// optional float desired_timescale = 1;
inline bool CCSUsrMsg_DesiredTimescale::has_desired_timescale() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_DesiredTimescale::clear_desired_timescale() {
  desired_timescale_ = 0;
  _clear_bit(0);
}
inline float CCSUsrMsg_DesiredTimescale::desired_timescale() const {
  return desired_timescale_;
}
inline void CCSUsrMsg_DesiredTimescale::set_desired_timescale(float value) {
  _set_bit(0);
  desired_timescale_ = value;
}

// optional float duration_realtime_sec = 2;
inline bool CCSUsrMsg_DesiredTimescale::has_duration_realtime_sec() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_DesiredTimescale::clear_duration_realtime_sec() {
  duration_realtime_sec_ = 0;
  _clear_bit(1);
}
inline float CCSUsrMsg_DesiredTimescale::duration_realtime_sec() const {
  return duration_realtime_sec_;
}
inline void CCSUsrMsg_DesiredTimescale::set_duration_realtime_sec(float value) {
  _set_bit(1);
  duration_realtime_sec_ = value;
}

// optional int32 interpolator_type = 3;
inline bool CCSUsrMsg_DesiredTimescale::has_interpolator_type() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_DesiredTimescale::clear_interpolator_type() {
  interpolator_type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_DesiredTimescale::interpolator_type() const {
  return interpolator_type_;
}
inline void CCSUsrMsg_DesiredTimescale::set_interpolator_type(::google::protobuf::int32 value) {
  _set_bit(2);
  interpolator_type_ = value;
}

// optional float start_blend_time = 4;
inline bool CCSUsrMsg_DesiredTimescale::has_start_blend_time() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  _clear_bit(3);
}
inline float CCSUsrMsg_DesiredTimescale::start_blend_time() const {
  return start_blend_time_;
}
inline void CCSUsrMsg_DesiredTimescale::set_start_blend_time(float value) {
  _set_bit(3);
  start_blend_time_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CurrentTimescale

// optional float cur_timescale = 1;
inline bool CCSUsrMsg_CurrentTimescale::has_cur_timescale() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_CurrentTimescale::clear_cur_timescale() {
  cur_timescale_ = 0;
  _clear_bit(0);
}
inline float CCSUsrMsg_CurrentTimescale::cur_timescale() const {
  return cur_timescale_;
}
inline void CCSUsrMsg_CurrentTimescale::set_cur_timescale(float value) {
  _set_bit(0);
  cur_timescale_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_AchievementEvent

// optional int32 achievement = 1;
inline bool CCSUsrMsg_AchievementEvent::has_achievement() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::achievement() const {
  return achievement_;
}
inline void CCSUsrMsg_AchievementEvent::set_achievement(::google::protobuf::int32 value) {
  _set_bit(0);
  achievement_ = value;
}

// optional int32 count = 2;
inline bool CCSUsrMsg_AchievementEvent::has_count() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_AchievementEvent::clear_count() {
  count_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::count() const {
  return count_;
}
inline void CCSUsrMsg_AchievementEvent::set_count(::google::protobuf::int32 value) {
  _set_bit(1);
  count_ = value;
}

// optional int32 user_id = 3;
inline bool CCSUsrMsg_AchievementEvent::has_user_id() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_AchievementEvent::clear_user_id() {
  user_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::user_id() const {
  return user_id_;
}
inline void CCSUsrMsg_AchievementEvent::set_user_id(::google::protobuf::int32 value) {
  _set_bit(2);
  user_id_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchEndConditions

// optional int32 fraglimit = 1;
inline bool CCSUsrMsg_MatchEndConditions::has_fraglimit() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_MatchEndConditions::clear_fraglimit() {
  fraglimit_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::fraglimit() const {
  return fraglimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_fraglimit(::google::protobuf::int32 value) {
  _set_bit(0);
  fraglimit_ = value;
}

// optional int32 mp_maxrounds = 2;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_maxrounds() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_maxrounds() {
  mp_maxrounds_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_maxrounds() const {
  return mp_maxrounds_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_maxrounds(::google::protobuf::int32 value) {
  _set_bit(1);
  mp_maxrounds_ = value;
}

// optional int32 mp_winlimit = 3;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_winlimit() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_winlimit() {
  mp_winlimit_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_winlimit() const {
  return mp_winlimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_winlimit(::google::protobuf::int32 value) {
  _set_bit(2);
  mp_winlimit_ = value;
}

// optional int32 mp_timelimit = 4;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_timelimit() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_timelimit() {
  mp_timelimit_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_timelimit() const {
  return mp_timelimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_timelimit(::google::protobuf::int32 value) {
  _set_bit(3);
  mp_timelimit_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerStatsUpdate_Stat

// optional int32 idx = 1;
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_idx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_idx() {
  idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::idx() const {
  return idx_;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  idx_ = value;
}

// optional int32 delta = 2;
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_delta() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_delta() {
  delta_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::delta() const {
  return delta_;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_delta(::google::protobuf::int32 value) {
  _set_bit(1);
  delta_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerStatsUpdate

// optional int32 version = 1;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_version() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_version() {
  version_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::version() const {
  return version_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_version(::google::protobuf::int32 value) {
  _set_bit(0);
  version_ = value;
}

// optional int32 official_server = 2;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_official_server() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_official_server() {
  official_server_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::official_server() const {
  return official_server_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_official_server(::google::protobuf::int32 value) {
  _set_bit(1);
  official_server_ = value;
}

// repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
inline int CCSUsrMsg_PlayerStatsUpdate::stats_size() const {
  return stats_.size();
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_stats() {
  stats_.Clear();
}
inline const ::CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate::stats(int index) const {
  return stats_.Get(index);
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
CCSUsrMsg_PlayerStatsUpdate::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
CCSUsrMsg_PlayerStatsUpdate::mutable_stats() {
  return &stats_;
}

// optional int32 user_id = 5;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_user_id() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_user_id() {
  user_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::user_id() const {
  return user_id_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_user_id(::google::protobuf::int32 value) {
  _set_bit(3);
  user_id_ = value;
}

// optional int32 crc = 6;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_crc() const {
  return _has_bit(4);
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_crc() {
  crc_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::crc() const {
  return crc_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_crc(::google::protobuf::int32 value) {
  _set_bit(4);
  crc_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisplayInventory

// optional bool display = 1;
inline bool CCSUsrMsg_DisplayInventory::has_display() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_DisplayInventory::clear_display() {
  display_ = false;
  _clear_bit(0);
}
inline bool CCSUsrMsg_DisplayInventory::display() const {
  return display_;
}
inline void CCSUsrMsg_DisplayInventory::set_display(bool value) {
  _set_bit(0);
  display_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_XRankGet

// optional int32 mode_idx = 1;
inline bool CCSUsrMsg_XRankGet::has_mode_idx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_XRankGet::clear_mode_idx() {
  mode_idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankGet::mode_idx() const {
  return mode_idx_;
}
inline void CCSUsrMsg_XRankGet::set_mode_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  mode_idx_ = value;
}

// optional int32 controller = 2;
inline bool CCSUsrMsg_XRankGet::has_controller() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_XRankGet::clear_controller() {
  controller_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankGet::controller() const {
  return controller_;
}
inline void CCSUsrMsg_XRankGet::set_controller(::google::protobuf::int32 value) {
  _set_bit(1);
  controller_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_XRankUpd

// optional int32 mode_idx = 1;
inline bool CCSUsrMsg_XRankUpd::has_mode_idx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_XRankUpd::clear_mode_idx() {
  mode_idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankUpd::mode_idx() const {
  return mode_idx_;
}
inline void CCSUsrMsg_XRankUpd::set_mode_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  mode_idx_ = value;
}

// optional int32 controller = 2;
inline bool CCSUsrMsg_XRankUpd::has_controller() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_XRankUpd::clear_controller() {
  controller_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankUpd::controller() const {
  return controller_;
}
inline void CCSUsrMsg_XRankUpd::set_controller(::google::protobuf::int32 value) {
  _set_bit(1);
  controller_ = value;
}

// optional int32 ranking = 3;
inline bool CCSUsrMsg_XRankUpd::has_ranking() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_XRankUpd::clear_ranking() {
  ranking_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankUpd::ranking() const {
  return ranking_;
}
inline void CCSUsrMsg_XRankUpd::set_ranking(::google::protobuf::int32 value) {
  _set_bit(2);
  ranking_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SetPlayerEloDisplayBracket

// optional int32 bracket = 1;
inline bool CCSUsrMsg_SetPlayerEloDisplayBracket::has_bracket() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_SetPlayerEloDisplayBracket::clear_bracket() {
  bracket_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_SetPlayerEloDisplayBracket::bracket() const {
  return bracket_;
}
inline void CCSUsrMsg_SetPlayerEloDisplayBracket::set_bracket(::google::protobuf::int32 value) {
  _set_bit(0);
  bracket_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RequestEloBracketInfo

// optional int32 bracket = 1;
inline bool CCSUsrMsg_RequestEloBracketInfo::has_bracket() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_RequestEloBracketInfo::clear_bracket() {
  bracket_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_RequestEloBracketInfo::bracket() const {
  return bracket_;
}
inline void CCSUsrMsg_RequestEloBracketInfo::set_bracket(::google::protobuf::int32 value) {
  _set_bit(0);
  bracket_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SetEloBracketInfo

// optional int32 game_mode = 1;
inline bool CCSUsrMsg_SetEloBracketInfo::has_game_mode() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_SetEloBracketInfo::clear_game_mode() {
  game_mode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_SetEloBracketInfo::game_mode() const {
  return game_mode_;
}
inline void CCSUsrMsg_SetEloBracketInfo::set_game_mode(::google::protobuf::int32 value) {
  _set_bit(0);
  game_mode_ = value;
}

// optional int32 display_bracket = 2;
inline bool CCSUsrMsg_SetEloBracketInfo::has_display_bracket() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_SetEloBracketInfo::clear_display_bracket() {
  display_bracket_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_SetEloBracketInfo::display_bracket() const {
  return display_bracket_;
}
inline void CCSUsrMsg_SetEloBracketInfo::set_display_bracket(::google::protobuf::int32 value) {
  _set_bit(1);
  display_bracket_ = value;
}

// optional int32 prev_bracket = 3;
inline bool CCSUsrMsg_SetEloBracketInfo::has_prev_bracket() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_SetEloBracketInfo::clear_prev_bracket() {
  prev_bracket_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_SetEloBracketInfo::prev_bracket() const {
  return prev_bracket_;
}
inline void CCSUsrMsg_SetEloBracketInfo::set_prev_bracket(::google::protobuf::int32 value) {
  _set_bit(2);
  prev_bracket_ = value;
}

// optional int32 num_games_in_bracket = 4;
inline bool CCSUsrMsg_SetEloBracketInfo::has_num_games_in_bracket() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_SetEloBracketInfo::clear_num_games_in_bracket() {
  num_games_in_bracket_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CCSUsrMsg_SetEloBracketInfo::num_games_in_bracket() const {
  return num_games_in_bracket_;
}
inline void CCSUsrMsg_SetEloBracketInfo::set_num_games_in_bracket(::google::protobuf::int32 value) {
  _set_bit(3);
  num_games_in_bracket_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CallVoteFailed

// optional int32 reason = 1;
inline bool CCSUsrMsg_CallVoteFailed::has_reason() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_CallVoteFailed::clear_reason() {
  reason_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::reason() const {
  return reason_;
}
inline void CCSUsrMsg_CallVoteFailed::set_reason(::google::protobuf::int32 value) {
  _set_bit(0);
  reason_ = value;
}

// optional int32 time = 2;
inline bool CCSUsrMsg_CallVoteFailed::has_time() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_CallVoteFailed::clear_time() {
  time_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::time() const {
  return time_;
}
inline void CCSUsrMsg_CallVoteFailed::set_time(::google::protobuf::int32 value) {
  _set_bit(1);
  time_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteStart

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteStart::has_team() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_VoteStart::clear_team() {
  team_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::team() const {
  return team_;
}
inline void CCSUsrMsg_VoteStart::set_team(::google::protobuf::int32 value) {
  _set_bit(0);
  team_ = value;
}

// optional int32 ent_idx = 2;
inline bool CCSUsrMsg_VoteStart::has_ent_idx() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VoteStart::clear_ent_idx() {
  ent_idx_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::ent_idx() const {
  return ent_idx_;
}
inline void CCSUsrMsg_VoteStart::set_ent_idx(::google::protobuf::int32 value) {
  _set_bit(1);
  ent_idx_ = value;
}

// optional int32 vote_type = 3;
inline bool CCSUsrMsg_VoteStart::has_vote_type() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_VoteStart::clear_vote_type() {
  vote_type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::vote_type() const {
  return vote_type_;
}
inline void CCSUsrMsg_VoteStart::set_vote_type(::google::protobuf::int32 value) {
  _set_bit(2);
  vote_type_ = value;
}

// optional string disp_str = 4;
inline bool CCSUsrMsg_VoteStart::has_disp_str() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_VoteStart::clear_disp_str() {
  if (disp_str_ != &_default_disp_str_) {
    disp_str_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CCSUsrMsg_VoteStart::disp_str() const {
  return *disp_str_;
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const ::std::string& value) {
  _set_bit(3);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const char* value) {
  _set_bit(3);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const char* value, size_t size) {
  _set_bit(3);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_disp_str() {
  _set_bit(3);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  return disp_str_;
}

// optional string details_str = 5;
inline bool CCSUsrMsg_VoteStart::has_details_str() const {
  return _has_bit(4);
}
inline void CCSUsrMsg_VoteStart::clear_details_str() {
  if (details_str_ != &_default_details_str_) {
    details_str_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CCSUsrMsg_VoteStart::details_str() const {
  return *details_str_;
}
inline void CCSUsrMsg_VoteStart::set_details_str(const ::std::string& value) {
  _set_bit(4);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_details_str(const char* value) {
  _set_bit(4);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_details_str(const char* value, size_t size) {
  _set_bit(4);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_details_str() {
  _set_bit(4);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  return details_str_;
}

// optional string other_team_str = 6;
inline bool CCSUsrMsg_VoteStart::has_other_team_str() const {
  return _has_bit(5);
}
inline void CCSUsrMsg_VoteStart::clear_other_team_str() {
  if (other_team_str_ != &_default_other_team_str_) {
    other_team_str_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CCSUsrMsg_VoteStart::other_team_str() const {
  return *other_team_str_;
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const ::std::string& value) {
  _set_bit(5);
  if (other_team_str_ == &_default_other_team_str_) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const char* value) {
  _set_bit(5);
  if (other_team_str_ == &_default_other_team_str_) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const char* value, size_t size) {
  _set_bit(5);
  if (other_team_str_ == &_default_other_team_str_) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_other_team_str() {
  _set_bit(5);
  if (other_team_str_ == &_default_other_team_str_) {
    other_team_str_ = new ::std::string;
  }
  return other_team_str_;
}

// optional bool is_yes_no_vote = 7;
inline bool CCSUsrMsg_VoteStart::has_is_yes_no_vote() const {
  return _has_bit(6);
}
inline void CCSUsrMsg_VoteStart::clear_is_yes_no_vote() {
  is_yes_no_vote_ = false;
  _clear_bit(6);
}
inline bool CCSUsrMsg_VoteStart::is_yes_no_vote() const {
  return is_yes_no_vote_;
}
inline void CCSUsrMsg_VoteStart::set_is_yes_no_vote(bool value) {
  _set_bit(6);
  is_yes_no_vote_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VotePass

// optional int32 team = 1;
inline bool CCSUsrMsg_VotePass::has_team() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_VotePass::clear_team() {
  team_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_VotePass::team() const {
  return team_;
}
inline void CCSUsrMsg_VotePass::set_team(::google::protobuf::int32 value) {
  _set_bit(0);
  team_ = value;
}

// optional int32 vote_type = 2;
inline bool CCSUsrMsg_VotePass::has_vote_type() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VotePass::clear_vote_type() {
  vote_type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_VotePass::vote_type() const {
  return vote_type_;
}
inline void CCSUsrMsg_VotePass::set_vote_type(::google::protobuf::int32 value) {
  _set_bit(1);
  vote_type_ = value;
}

// optional string disp_str = 3;
inline bool CCSUsrMsg_VotePass::has_disp_str() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_VotePass::clear_disp_str() {
  if (disp_str_ != &_default_disp_str_) {
    disp_str_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCSUsrMsg_VotePass::disp_str() const {
  return *disp_str_;
}
inline void CCSUsrMsg_VotePass::set_disp_str(const ::std::string& value) {
  _set_bit(2);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_disp_str(const char* value) {
  _set_bit(2);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_disp_str(const char* value, size_t size) {
  _set_bit(2);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VotePass::mutable_disp_str() {
  _set_bit(2);
  if (disp_str_ == &_default_disp_str_) {
    disp_str_ = new ::std::string;
  }
  return disp_str_;
}

// optional string details_str = 4;
inline bool CCSUsrMsg_VotePass::has_details_str() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_VotePass::clear_details_str() {
  if (details_str_ != &_default_details_str_) {
    details_str_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CCSUsrMsg_VotePass::details_str() const {
  return *details_str_;
}
inline void CCSUsrMsg_VotePass::set_details_str(const ::std::string& value) {
  _set_bit(3);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_details_str(const char* value) {
  _set_bit(3);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_details_str(const char* value, size_t size) {
  _set_bit(3);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VotePass::mutable_details_str() {
  _set_bit(3);
  if (details_str_ == &_default_details_str_) {
    details_str_ = new ::std::string;
  }
  return details_str_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteFailed

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteFailed::has_team() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_VoteFailed::clear_team() {
  team_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteFailed::team() const {
  return team_;
}
inline void CCSUsrMsg_VoteFailed::set_team(::google::protobuf::int32 value) {
  _set_bit(0);
  team_ = value;
}

// optional int32 reason = 2;
inline bool CCSUsrMsg_VoteFailed::has_reason() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_VoteFailed::clear_reason() {
  reason_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteFailed::reason() const {
  return reason_;
}
inline void CCSUsrMsg_VoteFailed::set_reason(::google::protobuf::int32 value) {
  _set_bit(1);
  reason_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteSetup

// repeated string potential_issues = 1;
inline int CCSUsrMsg_VoteSetup::potential_issues_size() const {
  return potential_issues_.size();
}
inline void CCSUsrMsg_VoteSetup::clear_potential_issues() {
  potential_issues_.Clear();
}
inline const ::std::string& CCSUsrMsg_VoteSetup::potential_issues(int index) const {
  return potential_issues_.Get(index);
}
inline ::std::string* CCSUsrMsg_VoteSetup::mutable_potential_issues(int index) {
  return potential_issues_.Mutable(index);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const ::std::string& value) {
  potential_issues_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value) {
  potential_issues_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value, size_t size) {
  potential_issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteSetup::add_potential_issues() {
  return potential_issues_.Add();
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const ::std::string& value) {
  potential_issues_.Add()->assign(value);
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value) {
  potential_issues_.Add()->assign(value);
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value, size_t size) {
  potential_issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_VoteSetup::potential_issues() const {
  return potential_issues_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_VoteSetup::mutable_potential_issues() {
  return &potential_issues_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendLastKillerDamageToClient

// optional int32 num_hits_given = 1;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_given() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_given() {
  num_hits_given_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_given() const {
  return num_hits_given_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_given(::google::protobuf::int32 value) {
  _set_bit(0);
  num_hits_given_ = value;
}

// optional int32 damage_given = 2;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_given() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_given() {
  damage_given_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_given() const {
  return damage_given_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_given(::google::protobuf::int32 value) {
  _set_bit(1);
  damage_given_ = value;
}

// optional int32 num_hits_taken = 3;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_taken() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_taken() {
  num_hits_taken_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_taken() const {
  return num_hits_taken_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_taken(::google::protobuf::int32 value) {
  _set_bit(2);
  num_hits_taken_ = value;
}

// optional int32 damage_taken = 4;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_taken() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_taken() {
  damage_taken_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_taken() const {
  return damage_taken_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_taken(::google::protobuf::int32 value) {
  _set_bit(3);
  damage_taken_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankUpdate_RankUpdate

// optional int32 account_id = 1;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_account_id() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_account_id() {
  account_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::account_id() const {
  return account_id_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_account_id(::google::protobuf::int32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional int32 rank_old = 2;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_old() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_old() {
  rank_old_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_old() const {
  return rank_old_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_old(::google::protobuf::int32 value) {
  _set_bit(1);
  rank_old_ = value;
}

// optional int32 rank_new = 3;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_new() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_new() {
  rank_new_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_new() const {
  return rank_new_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_new(::google::protobuf::int32 value) {
  _set_bit(2);
  rank_new_ = value;
}

// optional int32 num_wins = 4;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_num_wins() const {
  return _has_bit(3);
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_num_wins() {
  num_wins_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::num_wins() const {
  return num_wins_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_num_wins(::google::protobuf::int32 value) {
  _set_bit(3);
  num_wins_ = value;
}

// optional float rank_change = 5;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_change() const {
  return _has_bit(4);
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_change() {
  rank_change_ = 0;
  _clear_bit(4);
}
inline float CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_change() const {
  return rank_change_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_change(float value) {
  _set_bit(4);
  rank_change_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankUpdate

// repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
inline int CCSUsrMsg_ServerRankUpdate::rank_update_size() const {
  return rank_update_.size();
}
inline void CCSUsrMsg_ServerRankUpdate::clear_rank_update() {
  rank_update_.Clear();
}
inline const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate::rank_update(int index) const {
  return rank_update_.Get(index);
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::mutable_rank_update(int index) {
  return rank_update_.Mutable(index);
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::add_rank_update() {
  return rank_update_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
CCSUsrMsg_ServerRankUpdate::rank_update() const {
  return rank_update_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
CCSUsrMsg_ServerRankUpdate::mutable_rank_update() {
  return &rank_update_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemPickup

// optional string item = 1;
inline bool CCSUsrMsg_ItemPickup::has_item() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ItemPickup::clear_item() {
  if (item_ != &_default_item_) {
    item_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_ItemPickup::item() const {
  return *item_;
}
inline void CCSUsrMsg_ItemPickup::set_item(const ::std::string& value) {
  _set_bit(0);
  if (item_ == &_default_item_) {
    item_ = new ::std::string;
  }
  item_->assign(value);
}
inline void CCSUsrMsg_ItemPickup::set_item(const char* value) {
  _set_bit(0);
  if (item_ == &_default_item_) {
    item_ = new ::std::string;
  }
  item_->assign(value);
}
inline void CCSUsrMsg_ItemPickup::set_item(const char* value, size_t size) {
  _set_bit(0);
  if (item_ == &_default_item_) {
    item_ = new ::std::string;
  }
  item_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_ItemPickup::mutable_item() {
  _set_bit(0);
  if (item_ == &_default_item_) {
    item_ = new ::std::string;
  }
  return item_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ShowMenu

// optional int32 bits_valid_slots = 1;
inline bool CCSUsrMsg_ShowMenu::has_bits_valid_slots() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ShowMenu::clear_bits_valid_slots() {
  bits_valid_slots_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_ShowMenu::bits_valid_slots() const {
  return bits_valid_slots_;
}
inline void CCSUsrMsg_ShowMenu::set_bits_valid_slots(::google::protobuf::int32 value) {
  _set_bit(0);
  bits_valid_slots_ = value;
}

// optional int32 display_time = 2;
inline bool CCSUsrMsg_ShowMenu::has_display_time() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_ShowMenu::clear_display_time() {
  display_time_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CCSUsrMsg_ShowMenu::display_time() const {
  return display_time_;
}
inline void CCSUsrMsg_ShowMenu::set_display_time(::google::protobuf::int32 value) {
  _set_bit(1);
  display_time_ = value;
}

// optional string menu_string = 3;
inline bool CCSUsrMsg_ShowMenu::has_menu_string() const {
  return _has_bit(2);
}
inline void CCSUsrMsg_ShowMenu::clear_menu_string() {
  if (menu_string_ != &_default_menu_string_) {
    menu_string_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CCSUsrMsg_ShowMenu::menu_string() const {
  return *menu_string_;
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const ::std::string& value) {
  _set_bit(2);
  if (menu_string_ == &_default_menu_string_) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(value);
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const char* value) {
  _set_bit(2);
  if (menu_string_ == &_default_menu_string_) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(value);
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const char* value, size_t size) {
  _set_bit(2);
  if (menu_string_ == &_default_menu_string_) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_ShowMenu::mutable_menu_string() {
  _set_bit(2);
  if (menu_string_ == &_default_menu_string_) {
    menu_string_ = new ::std::string;
  }
  return menu_string_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_BarTime

// optional string time = 1;
inline bool CCSUsrMsg_BarTime::has_time() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_BarTime::clear_time() {
  if (time_ != &_default_time_) {
    time_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_BarTime::time() const {
  return *time_;
}
inline void CCSUsrMsg_BarTime::set_time(const ::std::string& value) {
  _set_bit(0);
  if (time_ == &_default_time_) {
    time_ = new ::std::string;
  }
  time_->assign(value);
}
inline void CCSUsrMsg_BarTime::set_time(const char* value) {
  _set_bit(0);
  if (time_ == &_default_time_) {
    time_ = new ::std::string;
  }
  time_->assign(value);
}
inline void CCSUsrMsg_BarTime::set_time(const char* value, size_t size) {
  _set_bit(0);
  if (time_ == &_default_time_) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_BarTime::mutable_time() {
  _set_bit(0);
  if (time_ == &_default_time_) {
    time_ = new ::std::string;
  }
  return time_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_AmmoDenied

// optional int32 ammoIdx = 1;
inline bool CCSUsrMsg_AmmoDenied::has_ammoidx() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_AmmoDenied::clear_ammoidx() {
  ammoidx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_AmmoDenied::ammoidx() const {
  return ammoidx_;
}
inline void CCSUsrMsg_AmmoDenied::set_ammoidx(::google::protobuf::int32 value) {
  _set_bit(0);
  ammoidx_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_MarkAchievement

// optional string achievement = 1;
inline bool CCSUsrMsg_MarkAchievement::has_achievement() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_MarkAchievement::clear_achievement() {
  if (achievement_ != &_default_achievement_) {
    achievement_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_MarkAchievement::achievement() const {
  return *achievement_;
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const ::std::string& value) {
  _set_bit(0);
  if (achievement_ == &_default_achievement_) {
    achievement_ = new ::std::string;
  }
  achievement_->assign(value);
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const char* value) {
  _set_bit(0);
  if (achievement_ == &_default_achievement_) {
    achievement_ = new ::std::string;
  }
  achievement_->assign(value);
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const char* value, size_t size) {
  _set_bit(0);
  if (achievement_ == &_default_achievement_) {
    achievement_ = new ::std::string;
  }
  achievement_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_MarkAchievement::mutable_achievement() {
  _set_bit(0);
  if (achievement_ == &_default_achievement_) {
    achievement_ = new ::std::string;
  }
  return achievement_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchStatsUpdate

// optional string update = 1;
inline bool CCSUsrMsg_MatchStatsUpdate::has_update() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_MatchStatsUpdate::clear_update() {
  if (update_ != &_default_update_) {
    update_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CCSUsrMsg_MatchStatsUpdate::update() const {
  return *update_;
}
inline void CCSUsrMsg_MatchStatsUpdate::set_update(const ::std::string& value) {
  _set_bit(0);
  if (update_ == &_default_update_) {
    update_ = new ::std::string;
  }
  update_->assign(value);
}
inline void CCSUsrMsg_MatchStatsUpdate::set_update(const char* value) {
  _set_bit(0);
  if (update_ == &_default_update_) {
    update_ = new ::std::string;
  }
  update_->assign(value);
}
inline void CCSUsrMsg_MatchStatsUpdate::set_update(const char* value, size_t size) {
  _set_bit(0);
  if (update_ == &_default_update_) {
    update_ = new ::std::string;
  }
  update_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_MatchStatsUpdate::mutable_update() {
  _set_bit(0);
  if (update_ == &_default_update_) {
    update_ = new ::std::string;
  }
  return update_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemDrop

// optional int64 itemid = 1;
inline bool CCSUsrMsg_ItemDrop::has_itemid() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ItemDrop::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 CCSUsrMsg_ItemDrop::itemid() const {
  return itemid_;
}
inline void CCSUsrMsg_ItemDrop::set_itemid(::google::protobuf::int64 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional bool death = 2;
inline bool CCSUsrMsg_ItemDrop::has_death() const {
  return _has_bit(1);
}
inline void CCSUsrMsg_ItemDrop::clear_death() {
  death_ = false;
  _clear_bit(1);
}
inline bool CCSUsrMsg_ItemDrop::death() const {
  return death_;
}
inline void CCSUsrMsg_ItemDrop::set_death(bool value) {
  _set_bit(1);
  death_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ResetHud

// optional bool reset = 1;
inline bool CCSUsrMsg_ResetHud::has_reset() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ResetHud::clear_reset() {
  reset_ = false;
  _clear_bit(0);
}
inline bool CCSUsrMsg_ResetHud::reset() const {
  return reset_;
}
inline void CCSUsrMsg_ResetHud::set_reset(bool value) {
  _set_bit(0);
  reset_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_GameTitle

// optional int32 dummy = 1;
inline bool CCSUsrMsg_GameTitle::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_GameTitle::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_GameTitle::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_GameTitle::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RequestState

// optional int32 dummy = 1;
inline bool CCSUsrMsg_RequestState::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_RequestState::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_RequestState::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_RequestState::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_StopSpectatorMode

// optional int32 dummy = 1;
inline bool CCSUsrMsg_StopSpectatorMode::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_StopSpectatorMode::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_StopSpectatorMode::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_StopSpectatorMode::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisconnectToLobby

// optional int32 dummy = 1;
inline bool CCSUsrMsg_DisconnectToLobby::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_DisconnectToLobby::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_DisconnectToLobby::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_DisconnectToLobby::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_WarmupHasEnded

// optional int32 dummy = 1;
inline bool CCSUsrMsg_WarmupHasEnded::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_WarmupHasEnded::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_WarmupHasEnded::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_WarmupHasEnded::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ClientInfo

// optional int32 dummy = 1;
inline bool CCSUsrMsg_ClientInfo::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ClientInfo::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_ClientInfo::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_ClientInfo::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankRevealAll

// optional int32 dummy = 1;
inline bool CCSUsrMsg_ServerRankRevealAll::has_dummy() const {
  return _has_bit(0);
}
inline void CCSUsrMsg_ServerRankRevealAll::clear_dummy() {
  dummy_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankRevealAll::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_ServerRankRevealAll::set_dummy(::google::protobuf::int32 value) {
  _set_bit(0);
  dummy_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ECstrike15UserMessages>() {
  return ECstrike15UserMessages_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cstrike15_5fusermessages_2eproto__INCLUDED
